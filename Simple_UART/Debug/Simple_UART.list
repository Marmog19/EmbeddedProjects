
Simple_UART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001248  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000003c  08001418  08001418  00011418  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001454  08001454  00020060  2**0
                  CONTENTS
  4 .ARM          00000000  08001454  08001454  00020060  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001454  08001454  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001454  08001454  00011454  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001458  08001458  00011458  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  0800145c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  080014bc  00020060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  080014bc  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 13 .debug_info   000014bd  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000626  00000000  00000000  00021590  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000178  00000000  00000000  00021bb8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000fe  00000000  00000000  00021d30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001faf  00000000  00000000  00021e2e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000025ef  00000000  00000000  00023ddd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00090d04  00000000  00000000  000263cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000c04  00000000  00000000  000b70d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  000b7cd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000060 	.word	0x20000060
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001400 	.word	0x08001400

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000064 	.word	0x20000064
 800020c:	08001400 	.word	0x08001400

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <UART_Init>:
#include "UART_lib.h"

void UART_Init(void) {
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
	uint16_t uartdiv = SystemCoreClock / 115200;
 80002b6:	4b1a      	ldr	r3, [pc, #104]	; (8000320 <UART_Init+0x70>)
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	4a1a      	ldr	r2, [pc, #104]	; (8000324 <UART_Init+0x74>)
 80002bc:	fba2 2303 	umull	r2, r3, r2, r3
 80002c0:	0c1b      	lsrs	r3, r3, #16
 80002c2:	80fb      	strh	r3, [r7, #6]

	RCC->APB1ENR |= (1<<17); // Clock Enable
 80002c4:	4b18      	ldr	r3, [pc, #96]	; (8000328 <UART_Init+0x78>)
 80002c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002c8:	4a17      	ldr	r2, [pc, #92]	; (8000328 <UART_Init+0x78>)
 80002ca:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002ce:	6413      	str	r3, [r2, #64]	; 0x40

	USART2->CR1 |= USART_CR1_UE; // UART Enable
 80002d0:	4b16      	ldr	r3, [pc, #88]	; (800032c <UART_Init+0x7c>)
 80002d2:	68db      	ldr	r3, [r3, #12]
 80002d4:	4a15      	ldr	r2, [pc, #84]	; (800032c <UART_Init+0x7c>)
 80002d6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002da:	60d3      	str	r3, [r2, #12]
	USART2->CR1 &= ~USART_CR1_M; // 8 bit word length
 80002dc:	4b13      	ldr	r3, [pc, #76]	; (800032c <UART_Init+0x7c>)
 80002de:	68db      	ldr	r3, [r3, #12]
 80002e0:	4a12      	ldr	r2, [pc, #72]	; (800032c <UART_Init+0x7c>)
 80002e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80002e6:	60d3      	str	r3, [r2, #12]
	USART2->CR2 &= ~USART_CR2_STOP_0; // 1 stop bit
 80002e8:	4b10      	ldr	r3, [pc, #64]	; (800032c <UART_Init+0x7c>)
 80002ea:	691b      	ldr	r3, [r3, #16]
 80002ec:	4a0f      	ldr	r2, [pc, #60]	; (800032c <UART_Init+0x7c>)
 80002ee:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80002f2:	6113      	str	r3, [r2, #16]
	USART2->BRR = uartdiv;// Baud rate 115200
 80002f4:	4a0d      	ldr	r2, [pc, #52]	; (800032c <UART_Init+0x7c>)
 80002f6:	88fb      	ldrh	r3, [r7, #6]
 80002f8:	6093      	str	r3, [r2, #8]

	USART2->CR1 |= USART_CR1_TE; // Transmission Enable
 80002fa:	4b0c      	ldr	r3, [pc, #48]	; (800032c <UART_Init+0x7c>)
 80002fc:	68db      	ldr	r3, [r3, #12]
 80002fe:	4a0b      	ldr	r2, [pc, #44]	; (800032c <UART_Init+0x7c>)
 8000300:	f043 0308 	orr.w	r3, r3, #8
 8000304:	60d3      	str	r3, [r2, #12]
	USART2->CR1 |= USART_CR1_RE; // Receiver enable
 8000306:	4b09      	ldr	r3, [pc, #36]	; (800032c <UART_Init+0x7c>)
 8000308:	68db      	ldr	r3, [r3, #12]
 800030a:	4a08      	ldr	r2, [pc, #32]	; (800032c <UART_Init+0x7c>)
 800030c:	f043 0304 	orr.w	r3, r3, #4
 8000310:	60d3      	str	r3, [r2, #12]
}
 8000312:	bf00      	nop
 8000314:	370c      	adds	r7, #12
 8000316:	46bd      	mov	sp, r7
 8000318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800031c:	4770      	bx	lr
 800031e:	bf00      	nop
 8000320:	20000000 	.word	0x20000000
 8000324:	91a2b3c5 	.word	0x91a2b3c5
 8000328:	40023800 	.word	0x40023800
 800032c:	40004400 	.word	0x40004400

08000330 <main>:
#include <stm32f4xx.h>
#include "UART_lib.h"

void GPIO_init(void);

int main(void){
 8000330:	b580      	push	{r7, lr}
 8000332:	b082      	sub	sp, #8
 8000334:	af00      	add	r7, sp, #0
	GPIO_init();
 8000336:	f000 f819 	bl	800036c <GPIO_init>
	UART_Init();
 800033a:	f7ff ffb9 	bl	80002b0 <UART_Init>


	char rxb = '\0';
 800033e:	2300      	movs	r3, #0
 8000340:	71fb      	strb	r3, [r7, #7]

	while(1){
		// Wait for a byte of data to arrive.
	    while( !( USART2->SR & USART_SR_RXNE ) ) {};
 8000342:	bf00      	nop
 8000344:	4b07      	ldr	r3, [pc, #28]	; (8000364 <main+0x34>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	f003 0320 	and.w	r3, r3, #32
 800034c:	2b00      	cmp	r3, #0
 800034e:	d0f9      	beq.n	8000344 <main+0x14>
	    rxb = USART2->DR;
 8000350:	4b04      	ldr	r3, [pc, #16]	; (8000364 <main+0x34>)
 8000352:	685b      	ldr	r3, [r3, #4]
 8000354:	71fb      	strb	r3, [r7, #7]

	    printf("RX: %c\r\n", rxb); // print the character received
 8000356:	79fb      	ldrb	r3, [r7, #7]
 8000358:	4619      	mov	r1, r3
 800035a:	4803      	ldr	r0, [pc, #12]	; (8000368 <main+0x38>)
 800035c:	f000 f9da 	bl	8000714 <iprintf>
	    while( !( USART2->SR & USART_SR_RXNE ) ) {};
 8000360:	e7ef      	b.n	8000342 <main+0x12>
 8000362:	bf00      	nop
 8000364:	40004400 	.word	0x40004400
 8000368:	08001418 	.word	0x08001418

0800036c <GPIO_init>:
	}
}

void GPIO_init(void){
 800036c:	b480      	push	{r7}
 800036e:	af00      	add	r7, sp, #0
	//Enable Clock Peripherals (GPIOA)
	RCC->AHB1ENR |= (1<<0);
 8000370:	4b11      	ldr	r3, [pc, #68]	; (80003b8 <GPIO_init+0x4c>)
 8000372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000374:	4a10      	ldr	r2, [pc, #64]	; (80003b8 <GPIO_init+0x4c>)
 8000376:	f043 0301 	orr.w	r3, r3, #1
 800037a:	6313      	str	r3, [r2, #48]	; 0x30


	// UART TX
    //Set GPIOA PIN 2 and 3 as Alternate function (MODER = 10)
	GPIOA->MODER |= (2<<4) | (2<<6);
 800037c:	4b0f      	ldr	r3, [pc, #60]	; (80003bc <GPIO_init+0x50>)
 800037e:	681b      	ldr	r3, [r3, #0]
 8000380:	4a0e      	ldr	r2, [pc, #56]	; (80003bc <GPIO_init+0x50>)
 8000382:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000386:	6013      	str	r3, [r2, #0]
	GPIOA->OTYPER &= ~((1<<2) | (1<<3));
 8000388:	4b0c      	ldr	r3, [pc, #48]	; (80003bc <GPIO_init+0x50>)
 800038a:	685b      	ldr	r3, [r3, #4]
 800038c:	4a0b      	ldr	r2, [pc, #44]	; (80003bc <GPIO_init+0x50>)
 800038e:	f023 030c 	bic.w	r3, r3, #12
 8000392:	6053      	str	r3, [r2, #4]
	GPIOA->OSPEEDR |= (2<<4) | (2<<6);  // Fast Output Speed
 8000394:	4b09      	ldr	r3, [pc, #36]	; (80003bc <GPIO_init+0x50>)
 8000396:	689b      	ldr	r3, [r3, #8]
 8000398:	4a08      	ldr	r2, [pc, #32]	; (80003bc <GPIO_init+0x50>)
 800039a:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 800039e:	6093      	str	r3, [r2, #8]
	GPIOA->AFR[0] |= (7 << 8) | (7<<12); // UART 2 Alt funct (AF7)
 80003a0:	4b06      	ldr	r3, [pc, #24]	; (80003bc <GPIO_init+0x50>)
 80003a2:	6a1b      	ldr	r3, [r3, #32]
 80003a4:	4a05      	ldr	r2, [pc, #20]	; (80003bc <GPIO_init+0x50>)
 80003a6:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 80003aa:	6213      	str	r3, [r2, #32]
}
 80003ac:	bf00      	nop
 80003ae:	46bd      	mov	sp, r7
 80003b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b4:	4770      	bx	lr
 80003b6:	bf00      	nop
 80003b8:	40023800 	.word	0x40023800
 80003bc:	40020000 	.word	0x40020000

080003c0 <_write>:

// Override the 'write' clib method to implement 'printf' over UART.
int _write(int handle, char* data, int size) {
 80003c0:	b480      	push	{r7}
 80003c2:	b087      	sub	sp, #28
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	60f8      	str	r0, [r7, #12]
 80003c8:	60b9      	str	r1, [r7, #8]
 80003ca:	607a      	str	r2, [r7, #4]
  int count = size;
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	617b      	str	r3, [r7, #20]

  while( count-- ) {
 80003d0:	e00c      	b.n	80003ec <_write+0x2c>
	  while(!(USART2->SR & USART_SR_TXE)) {};
 80003d2:	bf00      	nop
 80003d4:	4b0b      	ldr	r3, [pc, #44]	; (8000404 <_write+0x44>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003dc:	2b00      	cmp	r3, #0
 80003de:	d0f9      	beq.n	80003d4 <_write+0x14>
	  USART2->DR = *data++;
 80003e0:	68bb      	ldr	r3, [r7, #8]
 80003e2:	1c5a      	adds	r2, r3, #1
 80003e4:	60ba      	str	r2, [r7, #8]
 80003e6:	781a      	ldrb	r2, [r3, #0]
 80003e8:	4b06      	ldr	r3, [pc, #24]	; (8000404 <_write+0x44>)
 80003ea:	605a      	str	r2, [r3, #4]
  while( count-- ) {
 80003ec:	697b      	ldr	r3, [r7, #20]
 80003ee:	1e5a      	subs	r2, r3, #1
 80003f0:	617a      	str	r2, [r7, #20]
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d1ed      	bne.n	80003d2 <_write+0x12>
  }
  return size;
 80003f6:	687b      	ldr	r3, [r7, #4]
}
 80003f8:	4618      	mov	r0, r3
 80003fa:	371c      	adds	r7, #28
 80003fc:	46bd      	mov	sp, r7
 80003fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000402:	4770      	bx	lr
 8000404:	40004400 	.word	0x40004400

08000408 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	b086      	sub	sp, #24
 800040c:	af00      	add	r7, sp, #0
 800040e:	60f8      	str	r0, [r7, #12]
 8000410:	60b9      	str	r1, [r7, #8]
 8000412:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000414:	2300      	movs	r3, #0
 8000416:	617b      	str	r3, [r7, #20]
 8000418:	e00a      	b.n	8000430 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800041a:	f3af 8000 	nop.w
 800041e:	4601      	mov	r1, r0
 8000420:	68bb      	ldr	r3, [r7, #8]
 8000422:	1c5a      	adds	r2, r3, #1
 8000424:	60ba      	str	r2, [r7, #8]
 8000426:	b2ca      	uxtb	r2, r1
 8000428:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042a:	697b      	ldr	r3, [r7, #20]
 800042c:	3301      	adds	r3, #1
 800042e:	617b      	str	r3, [r7, #20]
 8000430:	697a      	ldr	r2, [r7, #20]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	429a      	cmp	r2, r3
 8000436:	dbf0      	blt.n	800041a <_read+0x12>
  }

  return len;
 8000438:	687b      	ldr	r3, [r7, #4]
}
 800043a:	4618      	mov	r0, r3
 800043c:	3718      	adds	r7, #24
 800043e:	46bd      	mov	sp, r7
 8000440:	bd80      	pop	{r7, pc}

08000442 <_close>:
  }
  return len;
}

int _close(int file)
{
 8000442:	b480      	push	{r7}
 8000444:	b083      	sub	sp, #12
 8000446:	af00      	add	r7, sp, #0
 8000448:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800044a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800044e:	4618      	mov	r0, r3
 8000450:	370c      	adds	r7, #12
 8000452:	46bd      	mov	sp, r7
 8000454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000458:	4770      	bx	lr

0800045a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800045a:	b480      	push	{r7}
 800045c:	b083      	sub	sp, #12
 800045e:	af00      	add	r7, sp, #0
 8000460:	6078      	str	r0, [r7, #4]
 8000462:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000464:	683b      	ldr	r3, [r7, #0]
 8000466:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800046a:	605a      	str	r2, [r3, #4]
  return 0;
 800046c:	2300      	movs	r3, #0
}
 800046e:	4618      	mov	r0, r3
 8000470:	370c      	adds	r7, #12
 8000472:	46bd      	mov	sp, r7
 8000474:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000478:	4770      	bx	lr

0800047a <_isatty>:

int _isatty(int file)
{
 800047a:	b480      	push	{r7}
 800047c:	b083      	sub	sp, #12
 800047e:	af00      	add	r7, sp, #0
 8000480:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000482:	2301      	movs	r3, #1
}
 8000484:	4618      	mov	r0, r3
 8000486:	370c      	adds	r7, #12
 8000488:	46bd      	mov	sp, r7
 800048a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048e:	4770      	bx	lr

08000490 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000490:	b480      	push	{r7}
 8000492:	b085      	sub	sp, #20
 8000494:	af00      	add	r7, sp, #0
 8000496:	60f8      	str	r0, [r7, #12]
 8000498:	60b9      	str	r1, [r7, #8]
 800049a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800049c:	2300      	movs	r3, #0
}
 800049e:	4618      	mov	r0, r3
 80004a0:	3714      	adds	r7, #20
 80004a2:	46bd      	mov	sp, r7
 80004a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a8:	4770      	bx	lr
	...

080004ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b086      	sub	sp, #24
 80004b0:	af00      	add	r7, sp, #0
 80004b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004b4:	4a14      	ldr	r2, [pc, #80]	; (8000508 <_sbrk+0x5c>)
 80004b6:	4b15      	ldr	r3, [pc, #84]	; (800050c <_sbrk+0x60>)
 80004b8:	1ad3      	subs	r3, r2, r3
 80004ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004bc:	697b      	ldr	r3, [r7, #20]
 80004be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004c0:	4b13      	ldr	r3, [pc, #76]	; (8000510 <_sbrk+0x64>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	2b00      	cmp	r3, #0
 80004c6:	d102      	bne.n	80004ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004c8:	4b11      	ldr	r3, [pc, #68]	; (8000510 <_sbrk+0x64>)
 80004ca:	4a12      	ldr	r2, [pc, #72]	; (8000514 <_sbrk+0x68>)
 80004cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004ce:	4b10      	ldr	r3, [pc, #64]	; (8000510 <_sbrk+0x64>)
 80004d0:	681a      	ldr	r2, [r3, #0]
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	4413      	add	r3, r2
 80004d6:	693a      	ldr	r2, [r7, #16]
 80004d8:	429a      	cmp	r2, r3
 80004da:	d207      	bcs.n	80004ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004dc:	f000 f9be 	bl	800085c <__errno>
 80004e0:	4603      	mov	r3, r0
 80004e2:	220c      	movs	r2, #12
 80004e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004e6:	f04f 33ff 	mov.w	r3, #4294967295
 80004ea:	e009      	b.n	8000500 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004ec:	4b08      	ldr	r3, [pc, #32]	; (8000510 <_sbrk+0x64>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004f2:	4b07      	ldr	r3, [pc, #28]	; (8000510 <_sbrk+0x64>)
 80004f4:	681a      	ldr	r2, [r3, #0]
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	4413      	add	r3, r2
 80004fa:	4a05      	ldr	r2, [pc, #20]	; (8000510 <_sbrk+0x64>)
 80004fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004fe:	68fb      	ldr	r3, [r7, #12]
}
 8000500:	4618      	mov	r0, r3
 8000502:	3718      	adds	r7, #24
 8000504:	46bd      	mov	sp, r7
 8000506:	bd80      	pop	{r7, pc}
 8000508:	20020000 	.word	0x20020000
 800050c:	00000400 	.word	0x00000400
 8000510:	2000007c 	.word	0x2000007c
 8000514:	200001d0 	.word	0x200001d0

08000518 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000518:	b480      	push	{r7}
 800051a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800051c:	4b06      	ldr	r3, [pc, #24]	; (8000538 <SystemInit+0x20>)
 800051e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000522:	4a05      	ldr	r2, [pc, #20]	; (8000538 <SystemInit+0x20>)
 8000524:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000528:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800052c:	bf00      	nop
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	e000ed00 	.word	0xe000ed00

0800053c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800053c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000574 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8000540:	f7ff ffea 	bl	8000518 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000544:	480c      	ldr	r0, [pc, #48]	; (8000578 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000546:	490d      	ldr	r1, [pc, #52]	; (800057c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000548:	4a0d      	ldr	r2, [pc, #52]	; (8000580 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800054a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800054c:	e002      	b.n	8000554 <LoopCopyDataInit>

0800054e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800054e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000550:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000552:	3304      	adds	r3, #4

08000554 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000554:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000556:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000558:	d3f9      	bcc.n	800054e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800055a:	4a0a      	ldr	r2, [pc, #40]	; (8000584 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800055c:	4c0a      	ldr	r4, [pc, #40]	; (8000588 <LoopFillZerobss+0x22>)
  movs r3, #0
 800055e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000560:	e001      	b.n	8000566 <LoopFillZerobss>

08000562 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000562:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000564:	3204      	adds	r2, #4

08000566 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000566:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000568:	d3fb      	bcc.n	8000562 <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 800056a:	f000 f97d 	bl	8000868 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800056e:	f7ff fedf 	bl	8000330 <main>
  bx  lr    
 8000572:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000574:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000578:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800057c:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000580:	0800145c 	.word	0x0800145c
  ldr r2, =_sbss
 8000584:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 8000588:	200001cc 	.word	0x200001cc

0800058c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800058c:	e7fe      	b.n	800058c <ADC_IRQHandler>
	...

08000590 <std>:
 8000590:	2300      	movs	r3, #0
 8000592:	b510      	push	{r4, lr}
 8000594:	4604      	mov	r4, r0
 8000596:	e9c0 3300 	strd	r3, r3, [r0]
 800059a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800059e:	6083      	str	r3, [r0, #8]
 80005a0:	8181      	strh	r1, [r0, #12]
 80005a2:	6643      	str	r3, [r0, #100]	; 0x64
 80005a4:	81c2      	strh	r2, [r0, #14]
 80005a6:	6183      	str	r3, [r0, #24]
 80005a8:	4619      	mov	r1, r3
 80005aa:	2208      	movs	r2, #8
 80005ac:	305c      	adds	r0, #92	; 0x5c
 80005ae:	f000 f906 	bl	80007be <memset>
 80005b2:	4b0d      	ldr	r3, [pc, #52]	; (80005e8 <std+0x58>)
 80005b4:	6263      	str	r3, [r4, #36]	; 0x24
 80005b6:	4b0d      	ldr	r3, [pc, #52]	; (80005ec <std+0x5c>)
 80005b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80005ba:	4b0d      	ldr	r3, [pc, #52]	; (80005f0 <std+0x60>)
 80005bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005be:	4b0d      	ldr	r3, [pc, #52]	; (80005f4 <std+0x64>)
 80005c0:	6323      	str	r3, [r4, #48]	; 0x30
 80005c2:	4b0d      	ldr	r3, [pc, #52]	; (80005f8 <std+0x68>)
 80005c4:	6224      	str	r4, [r4, #32]
 80005c6:	429c      	cmp	r4, r3
 80005c8:	d006      	beq.n	80005d8 <std+0x48>
 80005ca:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80005ce:	4294      	cmp	r4, r2
 80005d0:	d002      	beq.n	80005d8 <std+0x48>
 80005d2:	33d0      	adds	r3, #208	; 0xd0
 80005d4:	429c      	cmp	r4, r3
 80005d6:	d105      	bne.n	80005e4 <std+0x54>
 80005d8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e0:	f000 b966 	b.w	80008b0 <__retarget_lock_init_recursive>
 80005e4:	bd10      	pop	{r4, pc}
 80005e6:	bf00      	nop
 80005e8:	08000739 	.word	0x08000739
 80005ec:	0800075b 	.word	0x0800075b
 80005f0:	08000793 	.word	0x08000793
 80005f4:	080007b7 	.word	0x080007b7
 80005f8:	20000080 	.word	0x20000080

080005fc <stdio_exit_handler>:
 80005fc:	4a02      	ldr	r2, [pc, #8]	; (8000608 <stdio_exit_handler+0xc>)
 80005fe:	4903      	ldr	r1, [pc, #12]	; (800060c <stdio_exit_handler+0x10>)
 8000600:	4803      	ldr	r0, [pc, #12]	; (8000610 <stdio_exit_handler+0x14>)
 8000602:	f000 b869 	b.w	80006d8 <_fwalk_sglue>
 8000606:	bf00      	nop
 8000608:	20000004 	.word	0x20000004
 800060c:	0800115d 	.word	0x0800115d
 8000610:	20000010 	.word	0x20000010

08000614 <cleanup_stdio>:
 8000614:	6841      	ldr	r1, [r0, #4]
 8000616:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <cleanup_stdio+0x34>)
 8000618:	4299      	cmp	r1, r3
 800061a:	b510      	push	{r4, lr}
 800061c:	4604      	mov	r4, r0
 800061e:	d001      	beq.n	8000624 <cleanup_stdio+0x10>
 8000620:	f000 fd9c 	bl	800115c <_fflush_r>
 8000624:	68a1      	ldr	r1, [r4, #8]
 8000626:	4b09      	ldr	r3, [pc, #36]	; (800064c <cleanup_stdio+0x38>)
 8000628:	4299      	cmp	r1, r3
 800062a:	d002      	beq.n	8000632 <cleanup_stdio+0x1e>
 800062c:	4620      	mov	r0, r4
 800062e:	f000 fd95 	bl	800115c <_fflush_r>
 8000632:	68e1      	ldr	r1, [r4, #12]
 8000634:	4b06      	ldr	r3, [pc, #24]	; (8000650 <cleanup_stdio+0x3c>)
 8000636:	4299      	cmp	r1, r3
 8000638:	d004      	beq.n	8000644 <cleanup_stdio+0x30>
 800063a:	4620      	mov	r0, r4
 800063c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000640:	f000 bd8c 	b.w	800115c <_fflush_r>
 8000644:	bd10      	pop	{r4, pc}
 8000646:	bf00      	nop
 8000648:	20000080 	.word	0x20000080
 800064c:	200000e8 	.word	0x200000e8
 8000650:	20000150 	.word	0x20000150

08000654 <global_stdio_init.part.0>:
 8000654:	b510      	push	{r4, lr}
 8000656:	4b0b      	ldr	r3, [pc, #44]	; (8000684 <global_stdio_init.part.0+0x30>)
 8000658:	4c0b      	ldr	r4, [pc, #44]	; (8000688 <global_stdio_init.part.0+0x34>)
 800065a:	4a0c      	ldr	r2, [pc, #48]	; (800068c <global_stdio_init.part.0+0x38>)
 800065c:	601a      	str	r2, [r3, #0]
 800065e:	4620      	mov	r0, r4
 8000660:	2200      	movs	r2, #0
 8000662:	2104      	movs	r1, #4
 8000664:	f7ff ff94 	bl	8000590 <std>
 8000668:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800066c:	2201      	movs	r2, #1
 800066e:	2109      	movs	r1, #9
 8000670:	f7ff ff8e 	bl	8000590 <std>
 8000674:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000678:	2202      	movs	r2, #2
 800067a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800067e:	2112      	movs	r1, #18
 8000680:	f7ff bf86 	b.w	8000590 <std>
 8000684:	200001b8 	.word	0x200001b8
 8000688:	20000080 	.word	0x20000080
 800068c:	080005fd 	.word	0x080005fd

08000690 <__sfp_lock_acquire>:
 8000690:	4801      	ldr	r0, [pc, #4]	; (8000698 <__sfp_lock_acquire+0x8>)
 8000692:	f000 b90e 	b.w	80008b2 <__retarget_lock_acquire_recursive>
 8000696:	bf00      	nop
 8000698:	200001c1 	.word	0x200001c1

0800069c <__sfp_lock_release>:
 800069c:	4801      	ldr	r0, [pc, #4]	; (80006a4 <__sfp_lock_release+0x8>)
 800069e:	f000 b909 	b.w	80008b4 <__retarget_lock_release_recursive>
 80006a2:	bf00      	nop
 80006a4:	200001c1 	.word	0x200001c1

080006a8 <__sinit>:
 80006a8:	b510      	push	{r4, lr}
 80006aa:	4604      	mov	r4, r0
 80006ac:	f7ff fff0 	bl	8000690 <__sfp_lock_acquire>
 80006b0:	6a23      	ldr	r3, [r4, #32]
 80006b2:	b11b      	cbz	r3, 80006bc <__sinit+0x14>
 80006b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006b8:	f7ff bff0 	b.w	800069c <__sfp_lock_release>
 80006bc:	4b04      	ldr	r3, [pc, #16]	; (80006d0 <__sinit+0x28>)
 80006be:	6223      	str	r3, [r4, #32]
 80006c0:	4b04      	ldr	r3, [pc, #16]	; (80006d4 <__sinit+0x2c>)
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	2b00      	cmp	r3, #0
 80006c6:	d1f5      	bne.n	80006b4 <__sinit+0xc>
 80006c8:	f7ff ffc4 	bl	8000654 <global_stdio_init.part.0>
 80006cc:	e7f2      	b.n	80006b4 <__sinit+0xc>
 80006ce:	bf00      	nop
 80006d0:	08000615 	.word	0x08000615
 80006d4:	200001b8 	.word	0x200001b8

080006d8 <_fwalk_sglue>:
 80006d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80006dc:	4607      	mov	r7, r0
 80006de:	4688      	mov	r8, r1
 80006e0:	4614      	mov	r4, r2
 80006e2:	2600      	movs	r6, #0
 80006e4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80006e8:	f1b9 0901 	subs.w	r9, r9, #1
 80006ec:	d505      	bpl.n	80006fa <_fwalk_sglue+0x22>
 80006ee:	6824      	ldr	r4, [r4, #0]
 80006f0:	2c00      	cmp	r4, #0
 80006f2:	d1f7      	bne.n	80006e4 <_fwalk_sglue+0xc>
 80006f4:	4630      	mov	r0, r6
 80006f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006fa:	89ab      	ldrh	r3, [r5, #12]
 80006fc:	2b01      	cmp	r3, #1
 80006fe:	d907      	bls.n	8000710 <_fwalk_sglue+0x38>
 8000700:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000704:	3301      	adds	r3, #1
 8000706:	d003      	beq.n	8000710 <_fwalk_sglue+0x38>
 8000708:	4629      	mov	r1, r5
 800070a:	4638      	mov	r0, r7
 800070c:	47c0      	blx	r8
 800070e:	4306      	orrs	r6, r0
 8000710:	3568      	adds	r5, #104	; 0x68
 8000712:	e7e9      	b.n	80006e8 <_fwalk_sglue+0x10>

08000714 <iprintf>:
 8000714:	b40f      	push	{r0, r1, r2, r3}
 8000716:	b507      	push	{r0, r1, r2, lr}
 8000718:	4906      	ldr	r1, [pc, #24]	; (8000734 <iprintf+0x20>)
 800071a:	ab04      	add	r3, sp, #16
 800071c:	6808      	ldr	r0, [r1, #0]
 800071e:	f853 2b04 	ldr.w	r2, [r3], #4
 8000722:	6881      	ldr	r1, [r0, #8]
 8000724:	9301      	str	r3, [sp, #4]
 8000726:	f000 f9e9 	bl	8000afc <_vfiprintf_r>
 800072a:	b003      	add	sp, #12
 800072c:	f85d eb04 	ldr.w	lr, [sp], #4
 8000730:	b004      	add	sp, #16
 8000732:	4770      	bx	lr
 8000734:	2000005c 	.word	0x2000005c

08000738 <__sread>:
 8000738:	b510      	push	{r4, lr}
 800073a:	460c      	mov	r4, r1
 800073c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000740:	f000 f868 	bl	8000814 <_read_r>
 8000744:	2800      	cmp	r0, #0
 8000746:	bfab      	itete	ge
 8000748:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800074a:	89a3      	ldrhlt	r3, [r4, #12]
 800074c:	181b      	addge	r3, r3, r0
 800074e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000752:	bfac      	ite	ge
 8000754:	6563      	strge	r3, [r4, #84]	; 0x54
 8000756:	81a3      	strhlt	r3, [r4, #12]
 8000758:	bd10      	pop	{r4, pc}

0800075a <__swrite>:
 800075a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800075e:	461f      	mov	r7, r3
 8000760:	898b      	ldrh	r3, [r1, #12]
 8000762:	05db      	lsls	r3, r3, #23
 8000764:	4605      	mov	r5, r0
 8000766:	460c      	mov	r4, r1
 8000768:	4616      	mov	r6, r2
 800076a:	d505      	bpl.n	8000778 <__swrite+0x1e>
 800076c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000770:	2302      	movs	r3, #2
 8000772:	2200      	movs	r2, #0
 8000774:	f000 f83c 	bl	80007f0 <_lseek_r>
 8000778:	89a3      	ldrh	r3, [r4, #12]
 800077a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800077e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000782:	81a3      	strh	r3, [r4, #12]
 8000784:	4632      	mov	r2, r6
 8000786:	463b      	mov	r3, r7
 8000788:	4628      	mov	r0, r5
 800078a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800078e:	f000 b853 	b.w	8000838 <_write_r>

08000792 <__sseek>:
 8000792:	b510      	push	{r4, lr}
 8000794:	460c      	mov	r4, r1
 8000796:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800079a:	f000 f829 	bl	80007f0 <_lseek_r>
 800079e:	1c43      	adds	r3, r0, #1
 80007a0:	89a3      	ldrh	r3, [r4, #12]
 80007a2:	bf15      	itete	ne
 80007a4:	6560      	strne	r0, [r4, #84]	; 0x54
 80007a6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80007aa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80007ae:	81a3      	strheq	r3, [r4, #12]
 80007b0:	bf18      	it	ne
 80007b2:	81a3      	strhne	r3, [r4, #12]
 80007b4:	bd10      	pop	{r4, pc}

080007b6 <__sclose>:
 80007b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80007ba:	f000 b809 	b.w	80007d0 <_close_r>

080007be <memset>:
 80007be:	4402      	add	r2, r0
 80007c0:	4603      	mov	r3, r0
 80007c2:	4293      	cmp	r3, r2
 80007c4:	d100      	bne.n	80007c8 <memset+0xa>
 80007c6:	4770      	bx	lr
 80007c8:	f803 1b01 	strb.w	r1, [r3], #1
 80007cc:	e7f9      	b.n	80007c2 <memset+0x4>
	...

080007d0 <_close_r>:
 80007d0:	b538      	push	{r3, r4, r5, lr}
 80007d2:	4d06      	ldr	r5, [pc, #24]	; (80007ec <_close_r+0x1c>)
 80007d4:	2300      	movs	r3, #0
 80007d6:	4604      	mov	r4, r0
 80007d8:	4608      	mov	r0, r1
 80007da:	602b      	str	r3, [r5, #0]
 80007dc:	f7ff fe31 	bl	8000442 <_close>
 80007e0:	1c43      	adds	r3, r0, #1
 80007e2:	d102      	bne.n	80007ea <_close_r+0x1a>
 80007e4:	682b      	ldr	r3, [r5, #0]
 80007e6:	b103      	cbz	r3, 80007ea <_close_r+0x1a>
 80007e8:	6023      	str	r3, [r4, #0]
 80007ea:	bd38      	pop	{r3, r4, r5, pc}
 80007ec:	200001bc 	.word	0x200001bc

080007f0 <_lseek_r>:
 80007f0:	b538      	push	{r3, r4, r5, lr}
 80007f2:	4d07      	ldr	r5, [pc, #28]	; (8000810 <_lseek_r+0x20>)
 80007f4:	4604      	mov	r4, r0
 80007f6:	4608      	mov	r0, r1
 80007f8:	4611      	mov	r1, r2
 80007fa:	2200      	movs	r2, #0
 80007fc:	602a      	str	r2, [r5, #0]
 80007fe:	461a      	mov	r2, r3
 8000800:	f7ff fe46 	bl	8000490 <_lseek>
 8000804:	1c43      	adds	r3, r0, #1
 8000806:	d102      	bne.n	800080e <_lseek_r+0x1e>
 8000808:	682b      	ldr	r3, [r5, #0]
 800080a:	b103      	cbz	r3, 800080e <_lseek_r+0x1e>
 800080c:	6023      	str	r3, [r4, #0]
 800080e:	bd38      	pop	{r3, r4, r5, pc}
 8000810:	200001bc 	.word	0x200001bc

08000814 <_read_r>:
 8000814:	b538      	push	{r3, r4, r5, lr}
 8000816:	4d07      	ldr	r5, [pc, #28]	; (8000834 <_read_r+0x20>)
 8000818:	4604      	mov	r4, r0
 800081a:	4608      	mov	r0, r1
 800081c:	4611      	mov	r1, r2
 800081e:	2200      	movs	r2, #0
 8000820:	602a      	str	r2, [r5, #0]
 8000822:	461a      	mov	r2, r3
 8000824:	f7ff fdf0 	bl	8000408 <_read>
 8000828:	1c43      	adds	r3, r0, #1
 800082a:	d102      	bne.n	8000832 <_read_r+0x1e>
 800082c:	682b      	ldr	r3, [r5, #0]
 800082e:	b103      	cbz	r3, 8000832 <_read_r+0x1e>
 8000830:	6023      	str	r3, [r4, #0]
 8000832:	bd38      	pop	{r3, r4, r5, pc}
 8000834:	200001bc 	.word	0x200001bc

08000838 <_write_r>:
 8000838:	b538      	push	{r3, r4, r5, lr}
 800083a:	4d07      	ldr	r5, [pc, #28]	; (8000858 <_write_r+0x20>)
 800083c:	4604      	mov	r4, r0
 800083e:	4608      	mov	r0, r1
 8000840:	4611      	mov	r1, r2
 8000842:	2200      	movs	r2, #0
 8000844:	602a      	str	r2, [r5, #0]
 8000846:	461a      	mov	r2, r3
 8000848:	f7ff fdba 	bl	80003c0 <_write>
 800084c:	1c43      	adds	r3, r0, #1
 800084e:	d102      	bne.n	8000856 <_write_r+0x1e>
 8000850:	682b      	ldr	r3, [r5, #0]
 8000852:	b103      	cbz	r3, 8000856 <_write_r+0x1e>
 8000854:	6023      	str	r3, [r4, #0]
 8000856:	bd38      	pop	{r3, r4, r5, pc}
 8000858:	200001bc 	.word	0x200001bc

0800085c <__errno>:
 800085c:	4b01      	ldr	r3, [pc, #4]	; (8000864 <__errno+0x8>)
 800085e:	6818      	ldr	r0, [r3, #0]
 8000860:	4770      	bx	lr
 8000862:	bf00      	nop
 8000864:	2000005c 	.word	0x2000005c

08000868 <__libc_init_array>:
 8000868:	b570      	push	{r4, r5, r6, lr}
 800086a:	4d0d      	ldr	r5, [pc, #52]	; (80008a0 <__libc_init_array+0x38>)
 800086c:	4c0d      	ldr	r4, [pc, #52]	; (80008a4 <__libc_init_array+0x3c>)
 800086e:	1b64      	subs	r4, r4, r5
 8000870:	10a4      	asrs	r4, r4, #2
 8000872:	2600      	movs	r6, #0
 8000874:	42a6      	cmp	r6, r4
 8000876:	d109      	bne.n	800088c <__libc_init_array+0x24>
 8000878:	4d0b      	ldr	r5, [pc, #44]	; (80008a8 <__libc_init_array+0x40>)
 800087a:	4c0c      	ldr	r4, [pc, #48]	; (80008ac <__libc_init_array+0x44>)
 800087c:	f000 fdc0 	bl	8001400 <_init>
 8000880:	1b64      	subs	r4, r4, r5
 8000882:	10a4      	asrs	r4, r4, #2
 8000884:	2600      	movs	r6, #0
 8000886:	42a6      	cmp	r6, r4
 8000888:	d105      	bne.n	8000896 <__libc_init_array+0x2e>
 800088a:	bd70      	pop	{r4, r5, r6, pc}
 800088c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000890:	4798      	blx	r3
 8000892:	3601      	adds	r6, #1
 8000894:	e7ee      	b.n	8000874 <__libc_init_array+0xc>
 8000896:	f855 3b04 	ldr.w	r3, [r5], #4
 800089a:	4798      	blx	r3
 800089c:	3601      	adds	r6, #1
 800089e:	e7f2      	b.n	8000886 <__libc_init_array+0x1e>
 80008a0:	08001454 	.word	0x08001454
 80008a4:	08001454 	.word	0x08001454
 80008a8:	08001454 	.word	0x08001454
 80008ac:	08001458 	.word	0x08001458

080008b0 <__retarget_lock_init_recursive>:
 80008b0:	4770      	bx	lr

080008b2 <__retarget_lock_acquire_recursive>:
 80008b2:	4770      	bx	lr

080008b4 <__retarget_lock_release_recursive>:
 80008b4:	4770      	bx	lr
	...

080008b8 <_free_r>:
 80008b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80008ba:	2900      	cmp	r1, #0
 80008bc:	d044      	beq.n	8000948 <_free_r+0x90>
 80008be:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008c2:	9001      	str	r0, [sp, #4]
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	f1a1 0404 	sub.w	r4, r1, #4
 80008ca:	bfb8      	it	lt
 80008cc:	18e4      	addlt	r4, r4, r3
 80008ce:	f000 f8df 	bl	8000a90 <__malloc_lock>
 80008d2:	4a1e      	ldr	r2, [pc, #120]	; (800094c <_free_r+0x94>)
 80008d4:	9801      	ldr	r0, [sp, #4]
 80008d6:	6813      	ldr	r3, [r2, #0]
 80008d8:	b933      	cbnz	r3, 80008e8 <_free_r+0x30>
 80008da:	6063      	str	r3, [r4, #4]
 80008dc:	6014      	str	r4, [r2, #0]
 80008de:	b003      	add	sp, #12
 80008e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80008e4:	f000 b8da 	b.w	8000a9c <__malloc_unlock>
 80008e8:	42a3      	cmp	r3, r4
 80008ea:	d908      	bls.n	80008fe <_free_r+0x46>
 80008ec:	6825      	ldr	r5, [r4, #0]
 80008ee:	1961      	adds	r1, r4, r5
 80008f0:	428b      	cmp	r3, r1
 80008f2:	bf01      	itttt	eq
 80008f4:	6819      	ldreq	r1, [r3, #0]
 80008f6:	685b      	ldreq	r3, [r3, #4]
 80008f8:	1949      	addeq	r1, r1, r5
 80008fa:	6021      	streq	r1, [r4, #0]
 80008fc:	e7ed      	b.n	80008da <_free_r+0x22>
 80008fe:	461a      	mov	r2, r3
 8000900:	685b      	ldr	r3, [r3, #4]
 8000902:	b10b      	cbz	r3, 8000908 <_free_r+0x50>
 8000904:	42a3      	cmp	r3, r4
 8000906:	d9fa      	bls.n	80008fe <_free_r+0x46>
 8000908:	6811      	ldr	r1, [r2, #0]
 800090a:	1855      	adds	r5, r2, r1
 800090c:	42a5      	cmp	r5, r4
 800090e:	d10b      	bne.n	8000928 <_free_r+0x70>
 8000910:	6824      	ldr	r4, [r4, #0]
 8000912:	4421      	add	r1, r4
 8000914:	1854      	adds	r4, r2, r1
 8000916:	42a3      	cmp	r3, r4
 8000918:	6011      	str	r1, [r2, #0]
 800091a:	d1e0      	bne.n	80008de <_free_r+0x26>
 800091c:	681c      	ldr	r4, [r3, #0]
 800091e:	685b      	ldr	r3, [r3, #4]
 8000920:	6053      	str	r3, [r2, #4]
 8000922:	440c      	add	r4, r1
 8000924:	6014      	str	r4, [r2, #0]
 8000926:	e7da      	b.n	80008de <_free_r+0x26>
 8000928:	d902      	bls.n	8000930 <_free_r+0x78>
 800092a:	230c      	movs	r3, #12
 800092c:	6003      	str	r3, [r0, #0]
 800092e:	e7d6      	b.n	80008de <_free_r+0x26>
 8000930:	6825      	ldr	r5, [r4, #0]
 8000932:	1961      	adds	r1, r4, r5
 8000934:	428b      	cmp	r3, r1
 8000936:	bf04      	itt	eq
 8000938:	6819      	ldreq	r1, [r3, #0]
 800093a:	685b      	ldreq	r3, [r3, #4]
 800093c:	6063      	str	r3, [r4, #4]
 800093e:	bf04      	itt	eq
 8000940:	1949      	addeq	r1, r1, r5
 8000942:	6021      	streq	r1, [r4, #0]
 8000944:	6054      	str	r4, [r2, #4]
 8000946:	e7ca      	b.n	80008de <_free_r+0x26>
 8000948:	b003      	add	sp, #12
 800094a:	bd30      	pop	{r4, r5, pc}
 800094c:	200001c4 	.word	0x200001c4

08000950 <sbrk_aligned>:
 8000950:	b570      	push	{r4, r5, r6, lr}
 8000952:	4e0e      	ldr	r6, [pc, #56]	; (800098c <sbrk_aligned+0x3c>)
 8000954:	460c      	mov	r4, r1
 8000956:	6831      	ldr	r1, [r6, #0]
 8000958:	4605      	mov	r5, r0
 800095a:	b911      	cbnz	r1, 8000962 <sbrk_aligned+0x12>
 800095c:	f000 fcbc 	bl	80012d8 <_sbrk_r>
 8000960:	6030      	str	r0, [r6, #0]
 8000962:	4621      	mov	r1, r4
 8000964:	4628      	mov	r0, r5
 8000966:	f000 fcb7 	bl	80012d8 <_sbrk_r>
 800096a:	1c43      	adds	r3, r0, #1
 800096c:	d00a      	beq.n	8000984 <sbrk_aligned+0x34>
 800096e:	1cc4      	adds	r4, r0, #3
 8000970:	f024 0403 	bic.w	r4, r4, #3
 8000974:	42a0      	cmp	r0, r4
 8000976:	d007      	beq.n	8000988 <sbrk_aligned+0x38>
 8000978:	1a21      	subs	r1, r4, r0
 800097a:	4628      	mov	r0, r5
 800097c:	f000 fcac 	bl	80012d8 <_sbrk_r>
 8000980:	3001      	adds	r0, #1
 8000982:	d101      	bne.n	8000988 <sbrk_aligned+0x38>
 8000984:	f04f 34ff 	mov.w	r4, #4294967295
 8000988:	4620      	mov	r0, r4
 800098a:	bd70      	pop	{r4, r5, r6, pc}
 800098c:	200001c8 	.word	0x200001c8

08000990 <_malloc_r>:
 8000990:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000994:	1ccd      	adds	r5, r1, #3
 8000996:	f025 0503 	bic.w	r5, r5, #3
 800099a:	3508      	adds	r5, #8
 800099c:	2d0c      	cmp	r5, #12
 800099e:	bf38      	it	cc
 80009a0:	250c      	movcc	r5, #12
 80009a2:	2d00      	cmp	r5, #0
 80009a4:	4607      	mov	r7, r0
 80009a6:	db01      	blt.n	80009ac <_malloc_r+0x1c>
 80009a8:	42a9      	cmp	r1, r5
 80009aa:	d905      	bls.n	80009b8 <_malloc_r+0x28>
 80009ac:	230c      	movs	r3, #12
 80009ae:	603b      	str	r3, [r7, #0]
 80009b0:	2600      	movs	r6, #0
 80009b2:	4630      	mov	r0, r6
 80009b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009b8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a8c <_malloc_r+0xfc>
 80009bc:	f000 f868 	bl	8000a90 <__malloc_lock>
 80009c0:	f8d8 3000 	ldr.w	r3, [r8]
 80009c4:	461c      	mov	r4, r3
 80009c6:	bb5c      	cbnz	r4, 8000a20 <_malloc_r+0x90>
 80009c8:	4629      	mov	r1, r5
 80009ca:	4638      	mov	r0, r7
 80009cc:	f7ff ffc0 	bl	8000950 <sbrk_aligned>
 80009d0:	1c43      	adds	r3, r0, #1
 80009d2:	4604      	mov	r4, r0
 80009d4:	d155      	bne.n	8000a82 <_malloc_r+0xf2>
 80009d6:	f8d8 4000 	ldr.w	r4, [r8]
 80009da:	4626      	mov	r6, r4
 80009dc:	2e00      	cmp	r6, #0
 80009de:	d145      	bne.n	8000a6c <_malloc_r+0xdc>
 80009e0:	2c00      	cmp	r4, #0
 80009e2:	d048      	beq.n	8000a76 <_malloc_r+0xe6>
 80009e4:	6823      	ldr	r3, [r4, #0]
 80009e6:	4631      	mov	r1, r6
 80009e8:	4638      	mov	r0, r7
 80009ea:	eb04 0903 	add.w	r9, r4, r3
 80009ee:	f000 fc73 	bl	80012d8 <_sbrk_r>
 80009f2:	4581      	cmp	r9, r0
 80009f4:	d13f      	bne.n	8000a76 <_malloc_r+0xe6>
 80009f6:	6821      	ldr	r1, [r4, #0]
 80009f8:	1a6d      	subs	r5, r5, r1
 80009fa:	4629      	mov	r1, r5
 80009fc:	4638      	mov	r0, r7
 80009fe:	f7ff ffa7 	bl	8000950 <sbrk_aligned>
 8000a02:	3001      	adds	r0, #1
 8000a04:	d037      	beq.n	8000a76 <_malloc_r+0xe6>
 8000a06:	6823      	ldr	r3, [r4, #0]
 8000a08:	442b      	add	r3, r5
 8000a0a:	6023      	str	r3, [r4, #0]
 8000a0c:	f8d8 3000 	ldr.w	r3, [r8]
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d038      	beq.n	8000a86 <_malloc_r+0xf6>
 8000a14:	685a      	ldr	r2, [r3, #4]
 8000a16:	42a2      	cmp	r2, r4
 8000a18:	d12b      	bne.n	8000a72 <_malloc_r+0xe2>
 8000a1a:	2200      	movs	r2, #0
 8000a1c:	605a      	str	r2, [r3, #4]
 8000a1e:	e00f      	b.n	8000a40 <_malloc_r+0xb0>
 8000a20:	6822      	ldr	r2, [r4, #0]
 8000a22:	1b52      	subs	r2, r2, r5
 8000a24:	d41f      	bmi.n	8000a66 <_malloc_r+0xd6>
 8000a26:	2a0b      	cmp	r2, #11
 8000a28:	d917      	bls.n	8000a5a <_malloc_r+0xca>
 8000a2a:	1961      	adds	r1, r4, r5
 8000a2c:	42a3      	cmp	r3, r4
 8000a2e:	6025      	str	r5, [r4, #0]
 8000a30:	bf18      	it	ne
 8000a32:	6059      	strne	r1, [r3, #4]
 8000a34:	6863      	ldr	r3, [r4, #4]
 8000a36:	bf08      	it	eq
 8000a38:	f8c8 1000 	streq.w	r1, [r8]
 8000a3c:	5162      	str	r2, [r4, r5]
 8000a3e:	604b      	str	r3, [r1, #4]
 8000a40:	4638      	mov	r0, r7
 8000a42:	f104 060b 	add.w	r6, r4, #11
 8000a46:	f000 f829 	bl	8000a9c <__malloc_unlock>
 8000a4a:	f026 0607 	bic.w	r6, r6, #7
 8000a4e:	1d23      	adds	r3, r4, #4
 8000a50:	1af2      	subs	r2, r6, r3
 8000a52:	d0ae      	beq.n	80009b2 <_malloc_r+0x22>
 8000a54:	1b9b      	subs	r3, r3, r6
 8000a56:	50a3      	str	r3, [r4, r2]
 8000a58:	e7ab      	b.n	80009b2 <_malloc_r+0x22>
 8000a5a:	42a3      	cmp	r3, r4
 8000a5c:	6862      	ldr	r2, [r4, #4]
 8000a5e:	d1dd      	bne.n	8000a1c <_malloc_r+0x8c>
 8000a60:	f8c8 2000 	str.w	r2, [r8]
 8000a64:	e7ec      	b.n	8000a40 <_malloc_r+0xb0>
 8000a66:	4623      	mov	r3, r4
 8000a68:	6864      	ldr	r4, [r4, #4]
 8000a6a:	e7ac      	b.n	80009c6 <_malloc_r+0x36>
 8000a6c:	4634      	mov	r4, r6
 8000a6e:	6876      	ldr	r6, [r6, #4]
 8000a70:	e7b4      	b.n	80009dc <_malloc_r+0x4c>
 8000a72:	4613      	mov	r3, r2
 8000a74:	e7cc      	b.n	8000a10 <_malloc_r+0x80>
 8000a76:	230c      	movs	r3, #12
 8000a78:	603b      	str	r3, [r7, #0]
 8000a7a:	4638      	mov	r0, r7
 8000a7c:	f000 f80e 	bl	8000a9c <__malloc_unlock>
 8000a80:	e797      	b.n	80009b2 <_malloc_r+0x22>
 8000a82:	6025      	str	r5, [r4, #0]
 8000a84:	e7dc      	b.n	8000a40 <_malloc_r+0xb0>
 8000a86:	605b      	str	r3, [r3, #4]
 8000a88:	deff      	udf	#255	; 0xff
 8000a8a:	bf00      	nop
 8000a8c:	200001c4 	.word	0x200001c4

08000a90 <__malloc_lock>:
 8000a90:	4801      	ldr	r0, [pc, #4]	; (8000a98 <__malloc_lock+0x8>)
 8000a92:	f7ff bf0e 	b.w	80008b2 <__retarget_lock_acquire_recursive>
 8000a96:	bf00      	nop
 8000a98:	200001c0 	.word	0x200001c0

08000a9c <__malloc_unlock>:
 8000a9c:	4801      	ldr	r0, [pc, #4]	; (8000aa4 <__malloc_unlock+0x8>)
 8000a9e:	f7ff bf09 	b.w	80008b4 <__retarget_lock_release_recursive>
 8000aa2:	bf00      	nop
 8000aa4:	200001c0 	.word	0x200001c0

08000aa8 <__sfputc_r>:
 8000aa8:	6893      	ldr	r3, [r2, #8]
 8000aaa:	3b01      	subs	r3, #1
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	b410      	push	{r4}
 8000ab0:	6093      	str	r3, [r2, #8]
 8000ab2:	da08      	bge.n	8000ac6 <__sfputc_r+0x1e>
 8000ab4:	6994      	ldr	r4, [r2, #24]
 8000ab6:	42a3      	cmp	r3, r4
 8000ab8:	db01      	blt.n	8000abe <__sfputc_r+0x16>
 8000aba:	290a      	cmp	r1, #10
 8000abc:	d103      	bne.n	8000ac6 <__sfputc_r+0x1e>
 8000abe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ac2:	f000 bb73 	b.w	80011ac <__swbuf_r>
 8000ac6:	6813      	ldr	r3, [r2, #0]
 8000ac8:	1c58      	adds	r0, r3, #1
 8000aca:	6010      	str	r0, [r2, #0]
 8000acc:	7019      	strb	r1, [r3, #0]
 8000ace:	4608      	mov	r0, r1
 8000ad0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ad4:	4770      	bx	lr

08000ad6 <__sfputs_r>:
 8000ad6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ad8:	4606      	mov	r6, r0
 8000ada:	460f      	mov	r7, r1
 8000adc:	4614      	mov	r4, r2
 8000ade:	18d5      	adds	r5, r2, r3
 8000ae0:	42ac      	cmp	r4, r5
 8000ae2:	d101      	bne.n	8000ae8 <__sfputs_r+0x12>
 8000ae4:	2000      	movs	r0, #0
 8000ae6:	e007      	b.n	8000af8 <__sfputs_r+0x22>
 8000ae8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aec:	463a      	mov	r2, r7
 8000aee:	4630      	mov	r0, r6
 8000af0:	f7ff ffda 	bl	8000aa8 <__sfputc_r>
 8000af4:	1c43      	adds	r3, r0, #1
 8000af6:	d1f3      	bne.n	8000ae0 <__sfputs_r+0xa>
 8000af8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000afc <_vfiprintf_r>:
 8000afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000b00:	460d      	mov	r5, r1
 8000b02:	b09d      	sub	sp, #116	; 0x74
 8000b04:	4614      	mov	r4, r2
 8000b06:	4698      	mov	r8, r3
 8000b08:	4606      	mov	r6, r0
 8000b0a:	b118      	cbz	r0, 8000b14 <_vfiprintf_r+0x18>
 8000b0c:	6a03      	ldr	r3, [r0, #32]
 8000b0e:	b90b      	cbnz	r3, 8000b14 <_vfiprintf_r+0x18>
 8000b10:	f7ff fdca 	bl	80006a8 <__sinit>
 8000b14:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b16:	07d9      	lsls	r1, r3, #31
 8000b18:	d405      	bmi.n	8000b26 <_vfiprintf_r+0x2a>
 8000b1a:	89ab      	ldrh	r3, [r5, #12]
 8000b1c:	059a      	lsls	r2, r3, #22
 8000b1e:	d402      	bmi.n	8000b26 <_vfiprintf_r+0x2a>
 8000b20:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b22:	f7ff fec6 	bl	80008b2 <__retarget_lock_acquire_recursive>
 8000b26:	89ab      	ldrh	r3, [r5, #12]
 8000b28:	071b      	lsls	r3, r3, #28
 8000b2a:	d501      	bpl.n	8000b30 <_vfiprintf_r+0x34>
 8000b2c:	692b      	ldr	r3, [r5, #16]
 8000b2e:	b99b      	cbnz	r3, 8000b58 <_vfiprintf_r+0x5c>
 8000b30:	4629      	mov	r1, r5
 8000b32:	4630      	mov	r0, r6
 8000b34:	f000 fb78 	bl	8001228 <__swsetup_r>
 8000b38:	b170      	cbz	r0, 8000b58 <_vfiprintf_r+0x5c>
 8000b3a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b3c:	07dc      	lsls	r4, r3, #31
 8000b3e:	d504      	bpl.n	8000b4a <_vfiprintf_r+0x4e>
 8000b40:	f04f 30ff 	mov.w	r0, #4294967295
 8000b44:	b01d      	add	sp, #116	; 0x74
 8000b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000b4a:	89ab      	ldrh	r3, [r5, #12]
 8000b4c:	0598      	lsls	r0, r3, #22
 8000b4e:	d4f7      	bmi.n	8000b40 <_vfiprintf_r+0x44>
 8000b50:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b52:	f7ff feaf 	bl	80008b4 <__retarget_lock_release_recursive>
 8000b56:	e7f3      	b.n	8000b40 <_vfiprintf_r+0x44>
 8000b58:	2300      	movs	r3, #0
 8000b5a:	9309      	str	r3, [sp, #36]	; 0x24
 8000b5c:	2320      	movs	r3, #32
 8000b5e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000b62:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b66:	2330      	movs	r3, #48	; 0x30
 8000b68:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000d1c <_vfiprintf_r+0x220>
 8000b6c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000b70:	f04f 0901 	mov.w	r9, #1
 8000b74:	4623      	mov	r3, r4
 8000b76:	469a      	mov	sl, r3
 8000b78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b7c:	b10a      	cbz	r2, 8000b82 <_vfiprintf_r+0x86>
 8000b7e:	2a25      	cmp	r2, #37	; 0x25
 8000b80:	d1f9      	bne.n	8000b76 <_vfiprintf_r+0x7a>
 8000b82:	ebba 0b04 	subs.w	fp, sl, r4
 8000b86:	d00b      	beq.n	8000ba0 <_vfiprintf_r+0xa4>
 8000b88:	465b      	mov	r3, fp
 8000b8a:	4622      	mov	r2, r4
 8000b8c:	4629      	mov	r1, r5
 8000b8e:	4630      	mov	r0, r6
 8000b90:	f7ff ffa1 	bl	8000ad6 <__sfputs_r>
 8000b94:	3001      	adds	r0, #1
 8000b96:	f000 80a9 	beq.w	8000cec <_vfiprintf_r+0x1f0>
 8000b9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b9c:	445a      	add	r2, fp
 8000b9e:	9209      	str	r2, [sp, #36]	; 0x24
 8000ba0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ba4:	2b00      	cmp	r3, #0
 8000ba6:	f000 80a1 	beq.w	8000cec <_vfiprintf_r+0x1f0>
 8000baa:	2300      	movs	r3, #0
 8000bac:	f04f 32ff 	mov.w	r2, #4294967295
 8000bb0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000bb4:	f10a 0a01 	add.w	sl, sl, #1
 8000bb8:	9304      	str	r3, [sp, #16]
 8000bba:	9307      	str	r3, [sp, #28]
 8000bbc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000bc0:	931a      	str	r3, [sp, #104]	; 0x68
 8000bc2:	4654      	mov	r4, sl
 8000bc4:	2205      	movs	r2, #5
 8000bc6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bca:	4854      	ldr	r0, [pc, #336]	; (8000d1c <_vfiprintf_r+0x220>)
 8000bcc:	f7ff fb20 	bl	8000210 <memchr>
 8000bd0:	9a04      	ldr	r2, [sp, #16]
 8000bd2:	b9d8      	cbnz	r0, 8000c0c <_vfiprintf_r+0x110>
 8000bd4:	06d1      	lsls	r1, r2, #27
 8000bd6:	bf44      	itt	mi
 8000bd8:	2320      	movmi	r3, #32
 8000bda:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000bde:	0713      	lsls	r3, r2, #28
 8000be0:	bf44      	itt	mi
 8000be2:	232b      	movmi	r3, #43	; 0x2b
 8000be4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000be8:	f89a 3000 	ldrb.w	r3, [sl]
 8000bec:	2b2a      	cmp	r3, #42	; 0x2a
 8000bee:	d015      	beq.n	8000c1c <_vfiprintf_r+0x120>
 8000bf0:	9a07      	ldr	r2, [sp, #28]
 8000bf2:	4654      	mov	r4, sl
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	f04f 0c0a 	mov.w	ip, #10
 8000bfa:	4621      	mov	r1, r4
 8000bfc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000c00:	3b30      	subs	r3, #48	; 0x30
 8000c02:	2b09      	cmp	r3, #9
 8000c04:	d94d      	bls.n	8000ca2 <_vfiprintf_r+0x1a6>
 8000c06:	b1b0      	cbz	r0, 8000c36 <_vfiprintf_r+0x13a>
 8000c08:	9207      	str	r2, [sp, #28]
 8000c0a:	e014      	b.n	8000c36 <_vfiprintf_r+0x13a>
 8000c0c:	eba0 0308 	sub.w	r3, r0, r8
 8000c10:	fa09 f303 	lsl.w	r3, r9, r3
 8000c14:	4313      	orrs	r3, r2
 8000c16:	9304      	str	r3, [sp, #16]
 8000c18:	46a2      	mov	sl, r4
 8000c1a:	e7d2      	b.n	8000bc2 <_vfiprintf_r+0xc6>
 8000c1c:	9b03      	ldr	r3, [sp, #12]
 8000c1e:	1d19      	adds	r1, r3, #4
 8000c20:	681b      	ldr	r3, [r3, #0]
 8000c22:	9103      	str	r1, [sp, #12]
 8000c24:	2b00      	cmp	r3, #0
 8000c26:	bfbb      	ittet	lt
 8000c28:	425b      	neglt	r3, r3
 8000c2a:	f042 0202 	orrlt.w	r2, r2, #2
 8000c2e:	9307      	strge	r3, [sp, #28]
 8000c30:	9307      	strlt	r3, [sp, #28]
 8000c32:	bfb8      	it	lt
 8000c34:	9204      	strlt	r2, [sp, #16]
 8000c36:	7823      	ldrb	r3, [r4, #0]
 8000c38:	2b2e      	cmp	r3, #46	; 0x2e
 8000c3a:	d10c      	bne.n	8000c56 <_vfiprintf_r+0x15a>
 8000c3c:	7863      	ldrb	r3, [r4, #1]
 8000c3e:	2b2a      	cmp	r3, #42	; 0x2a
 8000c40:	d134      	bne.n	8000cac <_vfiprintf_r+0x1b0>
 8000c42:	9b03      	ldr	r3, [sp, #12]
 8000c44:	1d1a      	adds	r2, r3, #4
 8000c46:	681b      	ldr	r3, [r3, #0]
 8000c48:	9203      	str	r2, [sp, #12]
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	bfb8      	it	lt
 8000c4e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000c52:	3402      	adds	r4, #2
 8000c54:	9305      	str	r3, [sp, #20]
 8000c56:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000d2c <_vfiprintf_r+0x230>
 8000c5a:	7821      	ldrb	r1, [r4, #0]
 8000c5c:	2203      	movs	r2, #3
 8000c5e:	4650      	mov	r0, sl
 8000c60:	f7ff fad6 	bl	8000210 <memchr>
 8000c64:	b138      	cbz	r0, 8000c76 <_vfiprintf_r+0x17a>
 8000c66:	9b04      	ldr	r3, [sp, #16]
 8000c68:	eba0 000a 	sub.w	r0, r0, sl
 8000c6c:	2240      	movs	r2, #64	; 0x40
 8000c6e:	4082      	lsls	r2, r0
 8000c70:	4313      	orrs	r3, r2
 8000c72:	3401      	adds	r4, #1
 8000c74:	9304      	str	r3, [sp, #16]
 8000c76:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c7a:	4829      	ldr	r0, [pc, #164]	; (8000d20 <_vfiprintf_r+0x224>)
 8000c7c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000c80:	2206      	movs	r2, #6
 8000c82:	f7ff fac5 	bl	8000210 <memchr>
 8000c86:	2800      	cmp	r0, #0
 8000c88:	d03f      	beq.n	8000d0a <_vfiprintf_r+0x20e>
 8000c8a:	4b26      	ldr	r3, [pc, #152]	; (8000d24 <_vfiprintf_r+0x228>)
 8000c8c:	bb1b      	cbnz	r3, 8000cd6 <_vfiprintf_r+0x1da>
 8000c8e:	9b03      	ldr	r3, [sp, #12]
 8000c90:	3307      	adds	r3, #7
 8000c92:	f023 0307 	bic.w	r3, r3, #7
 8000c96:	3308      	adds	r3, #8
 8000c98:	9303      	str	r3, [sp, #12]
 8000c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c9c:	443b      	add	r3, r7
 8000c9e:	9309      	str	r3, [sp, #36]	; 0x24
 8000ca0:	e768      	b.n	8000b74 <_vfiprintf_r+0x78>
 8000ca2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ca6:	460c      	mov	r4, r1
 8000ca8:	2001      	movs	r0, #1
 8000caa:	e7a6      	b.n	8000bfa <_vfiprintf_r+0xfe>
 8000cac:	2300      	movs	r3, #0
 8000cae:	3401      	adds	r4, #1
 8000cb0:	9305      	str	r3, [sp, #20]
 8000cb2:	4619      	mov	r1, r3
 8000cb4:	f04f 0c0a 	mov.w	ip, #10
 8000cb8:	4620      	mov	r0, r4
 8000cba:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000cbe:	3a30      	subs	r2, #48	; 0x30
 8000cc0:	2a09      	cmp	r2, #9
 8000cc2:	d903      	bls.n	8000ccc <_vfiprintf_r+0x1d0>
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d0c6      	beq.n	8000c56 <_vfiprintf_r+0x15a>
 8000cc8:	9105      	str	r1, [sp, #20]
 8000cca:	e7c4      	b.n	8000c56 <_vfiprintf_r+0x15a>
 8000ccc:	fb0c 2101 	mla	r1, ip, r1, r2
 8000cd0:	4604      	mov	r4, r0
 8000cd2:	2301      	movs	r3, #1
 8000cd4:	e7f0      	b.n	8000cb8 <_vfiprintf_r+0x1bc>
 8000cd6:	ab03      	add	r3, sp, #12
 8000cd8:	9300      	str	r3, [sp, #0]
 8000cda:	462a      	mov	r2, r5
 8000cdc:	4b12      	ldr	r3, [pc, #72]	; (8000d28 <_vfiprintf_r+0x22c>)
 8000cde:	a904      	add	r1, sp, #16
 8000ce0:	4630      	mov	r0, r6
 8000ce2:	f3af 8000 	nop.w
 8000ce6:	4607      	mov	r7, r0
 8000ce8:	1c78      	adds	r0, r7, #1
 8000cea:	d1d6      	bne.n	8000c9a <_vfiprintf_r+0x19e>
 8000cec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000cee:	07d9      	lsls	r1, r3, #31
 8000cf0:	d405      	bmi.n	8000cfe <_vfiprintf_r+0x202>
 8000cf2:	89ab      	ldrh	r3, [r5, #12]
 8000cf4:	059a      	lsls	r2, r3, #22
 8000cf6:	d402      	bmi.n	8000cfe <_vfiprintf_r+0x202>
 8000cf8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cfa:	f7ff fddb 	bl	80008b4 <__retarget_lock_release_recursive>
 8000cfe:	89ab      	ldrh	r3, [r5, #12]
 8000d00:	065b      	lsls	r3, r3, #25
 8000d02:	f53f af1d 	bmi.w	8000b40 <_vfiprintf_r+0x44>
 8000d06:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000d08:	e71c      	b.n	8000b44 <_vfiprintf_r+0x48>
 8000d0a:	ab03      	add	r3, sp, #12
 8000d0c:	9300      	str	r3, [sp, #0]
 8000d0e:	462a      	mov	r2, r5
 8000d10:	4b05      	ldr	r3, [pc, #20]	; (8000d28 <_vfiprintf_r+0x22c>)
 8000d12:	a904      	add	r1, sp, #16
 8000d14:	4630      	mov	r0, r6
 8000d16:	f000 f879 	bl	8000e0c <_printf_i>
 8000d1a:	e7e4      	b.n	8000ce6 <_vfiprintf_r+0x1ea>
 8000d1c:	08001421 	.word	0x08001421
 8000d20:	0800142b 	.word	0x0800142b
 8000d24:	00000000 	.word	0x00000000
 8000d28:	08000ad7 	.word	0x08000ad7
 8000d2c:	08001427 	.word	0x08001427

08000d30 <_printf_common>:
 8000d30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d34:	4616      	mov	r6, r2
 8000d36:	4699      	mov	r9, r3
 8000d38:	688a      	ldr	r2, [r1, #8]
 8000d3a:	690b      	ldr	r3, [r1, #16]
 8000d3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000d40:	4293      	cmp	r3, r2
 8000d42:	bfb8      	it	lt
 8000d44:	4613      	movlt	r3, r2
 8000d46:	6033      	str	r3, [r6, #0]
 8000d48:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000d4c:	4607      	mov	r7, r0
 8000d4e:	460c      	mov	r4, r1
 8000d50:	b10a      	cbz	r2, 8000d56 <_printf_common+0x26>
 8000d52:	3301      	adds	r3, #1
 8000d54:	6033      	str	r3, [r6, #0]
 8000d56:	6823      	ldr	r3, [r4, #0]
 8000d58:	0699      	lsls	r1, r3, #26
 8000d5a:	bf42      	ittt	mi
 8000d5c:	6833      	ldrmi	r3, [r6, #0]
 8000d5e:	3302      	addmi	r3, #2
 8000d60:	6033      	strmi	r3, [r6, #0]
 8000d62:	6825      	ldr	r5, [r4, #0]
 8000d64:	f015 0506 	ands.w	r5, r5, #6
 8000d68:	d106      	bne.n	8000d78 <_printf_common+0x48>
 8000d6a:	f104 0a19 	add.w	sl, r4, #25
 8000d6e:	68e3      	ldr	r3, [r4, #12]
 8000d70:	6832      	ldr	r2, [r6, #0]
 8000d72:	1a9b      	subs	r3, r3, r2
 8000d74:	42ab      	cmp	r3, r5
 8000d76:	dc26      	bgt.n	8000dc6 <_printf_common+0x96>
 8000d78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000d7c:	1e13      	subs	r3, r2, #0
 8000d7e:	6822      	ldr	r2, [r4, #0]
 8000d80:	bf18      	it	ne
 8000d82:	2301      	movne	r3, #1
 8000d84:	0692      	lsls	r2, r2, #26
 8000d86:	d42b      	bmi.n	8000de0 <_printf_common+0xb0>
 8000d88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d8c:	4649      	mov	r1, r9
 8000d8e:	4638      	mov	r0, r7
 8000d90:	47c0      	blx	r8
 8000d92:	3001      	adds	r0, #1
 8000d94:	d01e      	beq.n	8000dd4 <_printf_common+0xa4>
 8000d96:	6823      	ldr	r3, [r4, #0]
 8000d98:	6922      	ldr	r2, [r4, #16]
 8000d9a:	f003 0306 	and.w	r3, r3, #6
 8000d9e:	2b04      	cmp	r3, #4
 8000da0:	bf02      	ittt	eq
 8000da2:	68e5      	ldreq	r5, [r4, #12]
 8000da4:	6833      	ldreq	r3, [r6, #0]
 8000da6:	1aed      	subeq	r5, r5, r3
 8000da8:	68a3      	ldr	r3, [r4, #8]
 8000daa:	bf0c      	ite	eq
 8000dac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000db0:	2500      	movne	r5, #0
 8000db2:	4293      	cmp	r3, r2
 8000db4:	bfc4      	itt	gt
 8000db6:	1a9b      	subgt	r3, r3, r2
 8000db8:	18ed      	addgt	r5, r5, r3
 8000dba:	2600      	movs	r6, #0
 8000dbc:	341a      	adds	r4, #26
 8000dbe:	42b5      	cmp	r5, r6
 8000dc0:	d11a      	bne.n	8000df8 <_printf_common+0xc8>
 8000dc2:	2000      	movs	r0, #0
 8000dc4:	e008      	b.n	8000dd8 <_printf_common+0xa8>
 8000dc6:	2301      	movs	r3, #1
 8000dc8:	4652      	mov	r2, sl
 8000dca:	4649      	mov	r1, r9
 8000dcc:	4638      	mov	r0, r7
 8000dce:	47c0      	blx	r8
 8000dd0:	3001      	adds	r0, #1
 8000dd2:	d103      	bne.n	8000ddc <_printf_common+0xac>
 8000dd4:	f04f 30ff 	mov.w	r0, #4294967295
 8000dd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ddc:	3501      	adds	r5, #1
 8000dde:	e7c6      	b.n	8000d6e <_printf_common+0x3e>
 8000de0:	18e1      	adds	r1, r4, r3
 8000de2:	1c5a      	adds	r2, r3, #1
 8000de4:	2030      	movs	r0, #48	; 0x30
 8000de6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000dea:	4422      	add	r2, r4
 8000dec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000df0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000df4:	3302      	adds	r3, #2
 8000df6:	e7c7      	b.n	8000d88 <_printf_common+0x58>
 8000df8:	2301      	movs	r3, #1
 8000dfa:	4622      	mov	r2, r4
 8000dfc:	4649      	mov	r1, r9
 8000dfe:	4638      	mov	r0, r7
 8000e00:	47c0      	blx	r8
 8000e02:	3001      	adds	r0, #1
 8000e04:	d0e6      	beq.n	8000dd4 <_printf_common+0xa4>
 8000e06:	3601      	adds	r6, #1
 8000e08:	e7d9      	b.n	8000dbe <_printf_common+0x8e>
	...

08000e0c <_printf_i>:
 8000e0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000e10:	7e0f      	ldrb	r7, [r1, #24]
 8000e12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000e14:	2f78      	cmp	r7, #120	; 0x78
 8000e16:	4691      	mov	r9, r2
 8000e18:	4680      	mov	r8, r0
 8000e1a:	460c      	mov	r4, r1
 8000e1c:	469a      	mov	sl, r3
 8000e1e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000e22:	d807      	bhi.n	8000e34 <_printf_i+0x28>
 8000e24:	2f62      	cmp	r7, #98	; 0x62
 8000e26:	d80a      	bhi.n	8000e3e <_printf_i+0x32>
 8000e28:	2f00      	cmp	r7, #0
 8000e2a:	f000 80d4 	beq.w	8000fd6 <_printf_i+0x1ca>
 8000e2e:	2f58      	cmp	r7, #88	; 0x58
 8000e30:	f000 80c0 	beq.w	8000fb4 <_printf_i+0x1a8>
 8000e34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000e3c:	e03a      	b.n	8000eb4 <_printf_i+0xa8>
 8000e3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000e42:	2b15      	cmp	r3, #21
 8000e44:	d8f6      	bhi.n	8000e34 <_printf_i+0x28>
 8000e46:	a101      	add	r1, pc, #4	; (adr r1, 8000e4c <_printf_i+0x40>)
 8000e48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000e4c:	08000ea5 	.word	0x08000ea5
 8000e50:	08000eb9 	.word	0x08000eb9
 8000e54:	08000e35 	.word	0x08000e35
 8000e58:	08000e35 	.word	0x08000e35
 8000e5c:	08000e35 	.word	0x08000e35
 8000e60:	08000e35 	.word	0x08000e35
 8000e64:	08000eb9 	.word	0x08000eb9
 8000e68:	08000e35 	.word	0x08000e35
 8000e6c:	08000e35 	.word	0x08000e35
 8000e70:	08000e35 	.word	0x08000e35
 8000e74:	08000e35 	.word	0x08000e35
 8000e78:	08000fbd 	.word	0x08000fbd
 8000e7c:	08000ee5 	.word	0x08000ee5
 8000e80:	08000f77 	.word	0x08000f77
 8000e84:	08000e35 	.word	0x08000e35
 8000e88:	08000e35 	.word	0x08000e35
 8000e8c:	08000fdf 	.word	0x08000fdf
 8000e90:	08000e35 	.word	0x08000e35
 8000e94:	08000ee5 	.word	0x08000ee5
 8000e98:	08000e35 	.word	0x08000e35
 8000e9c:	08000e35 	.word	0x08000e35
 8000ea0:	08000f7f 	.word	0x08000f7f
 8000ea4:	682b      	ldr	r3, [r5, #0]
 8000ea6:	1d1a      	adds	r2, r3, #4
 8000ea8:	681b      	ldr	r3, [r3, #0]
 8000eaa:	602a      	str	r2, [r5, #0]
 8000eac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000eb0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000eb4:	2301      	movs	r3, #1
 8000eb6:	e09f      	b.n	8000ff8 <_printf_i+0x1ec>
 8000eb8:	6820      	ldr	r0, [r4, #0]
 8000eba:	682b      	ldr	r3, [r5, #0]
 8000ebc:	0607      	lsls	r7, r0, #24
 8000ebe:	f103 0104 	add.w	r1, r3, #4
 8000ec2:	6029      	str	r1, [r5, #0]
 8000ec4:	d501      	bpl.n	8000eca <_printf_i+0xbe>
 8000ec6:	681e      	ldr	r6, [r3, #0]
 8000ec8:	e003      	b.n	8000ed2 <_printf_i+0xc6>
 8000eca:	0646      	lsls	r6, r0, #25
 8000ecc:	d5fb      	bpl.n	8000ec6 <_printf_i+0xba>
 8000ece:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000ed2:	2e00      	cmp	r6, #0
 8000ed4:	da03      	bge.n	8000ede <_printf_i+0xd2>
 8000ed6:	232d      	movs	r3, #45	; 0x2d
 8000ed8:	4276      	negs	r6, r6
 8000eda:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ede:	485a      	ldr	r0, [pc, #360]	; (8001048 <_printf_i+0x23c>)
 8000ee0:	230a      	movs	r3, #10
 8000ee2:	e012      	b.n	8000f0a <_printf_i+0xfe>
 8000ee4:	682b      	ldr	r3, [r5, #0]
 8000ee6:	6820      	ldr	r0, [r4, #0]
 8000ee8:	1d19      	adds	r1, r3, #4
 8000eea:	6029      	str	r1, [r5, #0]
 8000eec:	0605      	lsls	r5, r0, #24
 8000eee:	d501      	bpl.n	8000ef4 <_printf_i+0xe8>
 8000ef0:	681e      	ldr	r6, [r3, #0]
 8000ef2:	e002      	b.n	8000efa <_printf_i+0xee>
 8000ef4:	0641      	lsls	r1, r0, #25
 8000ef6:	d5fb      	bpl.n	8000ef0 <_printf_i+0xe4>
 8000ef8:	881e      	ldrh	r6, [r3, #0]
 8000efa:	4853      	ldr	r0, [pc, #332]	; (8001048 <_printf_i+0x23c>)
 8000efc:	2f6f      	cmp	r7, #111	; 0x6f
 8000efe:	bf0c      	ite	eq
 8000f00:	2308      	moveq	r3, #8
 8000f02:	230a      	movne	r3, #10
 8000f04:	2100      	movs	r1, #0
 8000f06:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000f0a:	6865      	ldr	r5, [r4, #4]
 8000f0c:	60a5      	str	r5, [r4, #8]
 8000f0e:	2d00      	cmp	r5, #0
 8000f10:	bfa2      	ittt	ge
 8000f12:	6821      	ldrge	r1, [r4, #0]
 8000f14:	f021 0104 	bicge.w	r1, r1, #4
 8000f18:	6021      	strge	r1, [r4, #0]
 8000f1a:	b90e      	cbnz	r6, 8000f20 <_printf_i+0x114>
 8000f1c:	2d00      	cmp	r5, #0
 8000f1e:	d04b      	beq.n	8000fb8 <_printf_i+0x1ac>
 8000f20:	4615      	mov	r5, r2
 8000f22:	fbb6 f1f3 	udiv	r1, r6, r3
 8000f26:	fb03 6711 	mls	r7, r3, r1, r6
 8000f2a:	5dc7      	ldrb	r7, [r0, r7]
 8000f2c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000f30:	4637      	mov	r7, r6
 8000f32:	42bb      	cmp	r3, r7
 8000f34:	460e      	mov	r6, r1
 8000f36:	d9f4      	bls.n	8000f22 <_printf_i+0x116>
 8000f38:	2b08      	cmp	r3, #8
 8000f3a:	d10b      	bne.n	8000f54 <_printf_i+0x148>
 8000f3c:	6823      	ldr	r3, [r4, #0]
 8000f3e:	07de      	lsls	r6, r3, #31
 8000f40:	d508      	bpl.n	8000f54 <_printf_i+0x148>
 8000f42:	6923      	ldr	r3, [r4, #16]
 8000f44:	6861      	ldr	r1, [r4, #4]
 8000f46:	4299      	cmp	r1, r3
 8000f48:	bfde      	ittt	le
 8000f4a:	2330      	movle	r3, #48	; 0x30
 8000f4c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000f50:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000f54:	1b52      	subs	r2, r2, r5
 8000f56:	6122      	str	r2, [r4, #16]
 8000f58:	f8cd a000 	str.w	sl, [sp]
 8000f5c:	464b      	mov	r3, r9
 8000f5e:	aa03      	add	r2, sp, #12
 8000f60:	4621      	mov	r1, r4
 8000f62:	4640      	mov	r0, r8
 8000f64:	f7ff fee4 	bl	8000d30 <_printf_common>
 8000f68:	3001      	adds	r0, #1
 8000f6a:	d14a      	bne.n	8001002 <_printf_i+0x1f6>
 8000f6c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f70:	b004      	add	sp, #16
 8000f72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f76:	6823      	ldr	r3, [r4, #0]
 8000f78:	f043 0320 	orr.w	r3, r3, #32
 8000f7c:	6023      	str	r3, [r4, #0]
 8000f7e:	4833      	ldr	r0, [pc, #204]	; (800104c <_printf_i+0x240>)
 8000f80:	2778      	movs	r7, #120	; 0x78
 8000f82:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000f86:	6823      	ldr	r3, [r4, #0]
 8000f88:	6829      	ldr	r1, [r5, #0]
 8000f8a:	061f      	lsls	r7, r3, #24
 8000f8c:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f90:	d402      	bmi.n	8000f98 <_printf_i+0x18c>
 8000f92:	065f      	lsls	r7, r3, #25
 8000f94:	bf48      	it	mi
 8000f96:	b2b6      	uxthmi	r6, r6
 8000f98:	07df      	lsls	r7, r3, #31
 8000f9a:	bf48      	it	mi
 8000f9c:	f043 0320 	orrmi.w	r3, r3, #32
 8000fa0:	6029      	str	r1, [r5, #0]
 8000fa2:	bf48      	it	mi
 8000fa4:	6023      	strmi	r3, [r4, #0]
 8000fa6:	b91e      	cbnz	r6, 8000fb0 <_printf_i+0x1a4>
 8000fa8:	6823      	ldr	r3, [r4, #0]
 8000faa:	f023 0320 	bic.w	r3, r3, #32
 8000fae:	6023      	str	r3, [r4, #0]
 8000fb0:	2310      	movs	r3, #16
 8000fb2:	e7a7      	b.n	8000f04 <_printf_i+0xf8>
 8000fb4:	4824      	ldr	r0, [pc, #144]	; (8001048 <_printf_i+0x23c>)
 8000fb6:	e7e4      	b.n	8000f82 <_printf_i+0x176>
 8000fb8:	4615      	mov	r5, r2
 8000fba:	e7bd      	b.n	8000f38 <_printf_i+0x12c>
 8000fbc:	682b      	ldr	r3, [r5, #0]
 8000fbe:	6826      	ldr	r6, [r4, #0]
 8000fc0:	6961      	ldr	r1, [r4, #20]
 8000fc2:	1d18      	adds	r0, r3, #4
 8000fc4:	6028      	str	r0, [r5, #0]
 8000fc6:	0635      	lsls	r5, r6, #24
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	d501      	bpl.n	8000fd0 <_printf_i+0x1c4>
 8000fcc:	6019      	str	r1, [r3, #0]
 8000fce:	e002      	b.n	8000fd6 <_printf_i+0x1ca>
 8000fd0:	0670      	lsls	r0, r6, #25
 8000fd2:	d5fb      	bpl.n	8000fcc <_printf_i+0x1c0>
 8000fd4:	8019      	strh	r1, [r3, #0]
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	6123      	str	r3, [r4, #16]
 8000fda:	4615      	mov	r5, r2
 8000fdc:	e7bc      	b.n	8000f58 <_printf_i+0x14c>
 8000fde:	682b      	ldr	r3, [r5, #0]
 8000fe0:	1d1a      	adds	r2, r3, #4
 8000fe2:	602a      	str	r2, [r5, #0]
 8000fe4:	681d      	ldr	r5, [r3, #0]
 8000fe6:	6862      	ldr	r2, [r4, #4]
 8000fe8:	2100      	movs	r1, #0
 8000fea:	4628      	mov	r0, r5
 8000fec:	f7ff f910 	bl	8000210 <memchr>
 8000ff0:	b108      	cbz	r0, 8000ff6 <_printf_i+0x1ea>
 8000ff2:	1b40      	subs	r0, r0, r5
 8000ff4:	6060      	str	r0, [r4, #4]
 8000ff6:	6863      	ldr	r3, [r4, #4]
 8000ff8:	6123      	str	r3, [r4, #16]
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001000:	e7aa      	b.n	8000f58 <_printf_i+0x14c>
 8001002:	6923      	ldr	r3, [r4, #16]
 8001004:	462a      	mov	r2, r5
 8001006:	4649      	mov	r1, r9
 8001008:	4640      	mov	r0, r8
 800100a:	47d0      	blx	sl
 800100c:	3001      	adds	r0, #1
 800100e:	d0ad      	beq.n	8000f6c <_printf_i+0x160>
 8001010:	6823      	ldr	r3, [r4, #0]
 8001012:	079b      	lsls	r3, r3, #30
 8001014:	d413      	bmi.n	800103e <_printf_i+0x232>
 8001016:	68e0      	ldr	r0, [r4, #12]
 8001018:	9b03      	ldr	r3, [sp, #12]
 800101a:	4298      	cmp	r0, r3
 800101c:	bfb8      	it	lt
 800101e:	4618      	movlt	r0, r3
 8001020:	e7a6      	b.n	8000f70 <_printf_i+0x164>
 8001022:	2301      	movs	r3, #1
 8001024:	4632      	mov	r2, r6
 8001026:	4649      	mov	r1, r9
 8001028:	4640      	mov	r0, r8
 800102a:	47d0      	blx	sl
 800102c:	3001      	adds	r0, #1
 800102e:	d09d      	beq.n	8000f6c <_printf_i+0x160>
 8001030:	3501      	adds	r5, #1
 8001032:	68e3      	ldr	r3, [r4, #12]
 8001034:	9903      	ldr	r1, [sp, #12]
 8001036:	1a5b      	subs	r3, r3, r1
 8001038:	42ab      	cmp	r3, r5
 800103a:	dcf2      	bgt.n	8001022 <_printf_i+0x216>
 800103c:	e7eb      	b.n	8001016 <_printf_i+0x20a>
 800103e:	2500      	movs	r5, #0
 8001040:	f104 0619 	add.w	r6, r4, #25
 8001044:	e7f5      	b.n	8001032 <_printf_i+0x226>
 8001046:	bf00      	nop
 8001048:	08001432 	.word	0x08001432
 800104c:	08001443 	.word	0x08001443

08001050 <__sflush_r>:
 8001050:	898a      	ldrh	r2, [r1, #12]
 8001052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001056:	4605      	mov	r5, r0
 8001058:	0710      	lsls	r0, r2, #28
 800105a:	460c      	mov	r4, r1
 800105c:	d458      	bmi.n	8001110 <__sflush_r+0xc0>
 800105e:	684b      	ldr	r3, [r1, #4]
 8001060:	2b00      	cmp	r3, #0
 8001062:	dc05      	bgt.n	8001070 <__sflush_r+0x20>
 8001064:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001066:	2b00      	cmp	r3, #0
 8001068:	dc02      	bgt.n	8001070 <__sflush_r+0x20>
 800106a:	2000      	movs	r0, #0
 800106c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001070:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001072:	2e00      	cmp	r6, #0
 8001074:	d0f9      	beq.n	800106a <__sflush_r+0x1a>
 8001076:	2300      	movs	r3, #0
 8001078:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800107c:	682f      	ldr	r7, [r5, #0]
 800107e:	6a21      	ldr	r1, [r4, #32]
 8001080:	602b      	str	r3, [r5, #0]
 8001082:	d032      	beq.n	80010ea <__sflush_r+0x9a>
 8001084:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001086:	89a3      	ldrh	r3, [r4, #12]
 8001088:	075a      	lsls	r2, r3, #29
 800108a:	d505      	bpl.n	8001098 <__sflush_r+0x48>
 800108c:	6863      	ldr	r3, [r4, #4]
 800108e:	1ac0      	subs	r0, r0, r3
 8001090:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001092:	b10b      	cbz	r3, 8001098 <__sflush_r+0x48>
 8001094:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001096:	1ac0      	subs	r0, r0, r3
 8001098:	2300      	movs	r3, #0
 800109a:	4602      	mov	r2, r0
 800109c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800109e:	6a21      	ldr	r1, [r4, #32]
 80010a0:	4628      	mov	r0, r5
 80010a2:	47b0      	blx	r6
 80010a4:	1c43      	adds	r3, r0, #1
 80010a6:	89a3      	ldrh	r3, [r4, #12]
 80010a8:	d106      	bne.n	80010b8 <__sflush_r+0x68>
 80010aa:	6829      	ldr	r1, [r5, #0]
 80010ac:	291d      	cmp	r1, #29
 80010ae:	d82b      	bhi.n	8001108 <__sflush_r+0xb8>
 80010b0:	4a29      	ldr	r2, [pc, #164]	; (8001158 <__sflush_r+0x108>)
 80010b2:	410a      	asrs	r2, r1
 80010b4:	07d6      	lsls	r6, r2, #31
 80010b6:	d427      	bmi.n	8001108 <__sflush_r+0xb8>
 80010b8:	2200      	movs	r2, #0
 80010ba:	6062      	str	r2, [r4, #4]
 80010bc:	04d9      	lsls	r1, r3, #19
 80010be:	6922      	ldr	r2, [r4, #16]
 80010c0:	6022      	str	r2, [r4, #0]
 80010c2:	d504      	bpl.n	80010ce <__sflush_r+0x7e>
 80010c4:	1c42      	adds	r2, r0, #1
 80010c6:	d101      	bne.n	80010cc <__sflush_r+0x7c>
 80010c8:	682b      	ldr	r3, [r5, #0]
 80010ca:	b903      	cbnz	r3, 80010ce <__sflush_r+0x7e>
 80010cc:	6560      	str	r0, [r4, #84]	; 0x54
 80010ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80010d0:	602f      	str	r7, [r5, #0]
 80010d2:	2900      	cmp	r1, #0
 80010d4:	d0c9      	beq.n	800106a <__sflush_r+0x1a>
 80010d6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80010da:	4299      	cmp	r1, r3
 80010dc:	d002      	beq.n	80010e4 <__sflush_r+0x94>
 80010de:	4628      	mov	r0, r5
 80010e0:	f7ff fbea 	bl	80008b8 <_free_r>
 80010e4:	2000      	movs	r0, #0
 80010e6:	6360      	str	r0, [r4, #52]	; 0x34
 80010e8:	e7c0      	b.n	800106c <__sflush_r+0x1c>
 80010ea:	2301      	movs	r3, #1
 80010ec:	4628      	mov	r0, r5
 80010ee:	47b0      	blx	r6
 80010f0:	1c41      	adds	r1, r0, #1
 80010f2:	d1c8      	bne.n	8001086 <__sflush_r+0x36>
 80010f4:	682b      	ldr	r3, [r5, #0]
 80010f6:	2b00      	cmp	r3, #0
 80010f8:	d0c5      	beq.n	8001086 <__sflush_r+0x36>
 80010fa:	2b1d      	cmp	r3, #29
 80010fc:	d001      	beq.n	8001102 <__sflush_r+0xb2>
 80010fe:	2b16      	cmp	r3, #22
 8001100:	d101      	bne.n	8001106 <__sflush_r+0xb6>
 8001102:	602f      	str	r7, [r5, #0]
 8001104:	e7b1      	b.n	800106a <__sflush_r+0x1a>
 8001106:	89a3      	ldrh	r3, [r4, #12]
 8001108:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800110c:	81a3      	strh	r3, [r4, #12]
 800110e:	e7ad      	b.n	800106c <__sflush_r+0x1c>
 8001110:	690f      	ldr	r7, [r1, #16]
 8001112:	2f00      	cmp	r7, #0
 8001114:	d0a9      	beq.n	800106a <__sflush_r+0x1a>
 8001116:	0793      	lsls	r3, r2, #30
 8001118:	680e      	ldr	r6, [r1, #0]
 800111a:	bf08      	it	eq
 800111c:	694b      	ldreq	r3, [r1, #20]
 800111e:	600f      	str	r7, [r1, #0]
 8001120:	bf18      	it	ne
 8001122:	2300      	movne	r3, #0
 8001124:	eba6 0807 	sub.w	r8, r6, r7
 8001128:	608b      	str	r3, [r1, #8]
 800112a:	f1b8 0f00 	cmp.w	r8, #0
 800112e:	dd9c      	ble.n	800106a <__sflush_r+0x1a>
 8001130:	6a21      	ldr	r1, [r4, #32]
 8001132:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001134:	4643      	mov	r3, r8
 8001136:	463a      	mov	r2, r7
 8001138:	4628      	mov	r0, r5
 800113a:	47b0      	blx	r6
 800113c:	2800      	cmp	r0, #0
 800113e:	dc06      	bgt.n	800114e <__sflush_r+0xfe>
 8001140:	89a3      	ldrh	r3, [r4, #12]
 8001142:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001146:	81a3      	strh	r3, [r4, #12]
 8001148:	f04f 30ff 	mov.w	r0, #4294967295
 800114c:	e78e      	b.n	800106c <__sflush_r+0x1c>
 800114e:	4407      	add	r7, r0
 8001150:	eba8 0800 	sub.w	r8, r8, r0
 8001154:	e7e9      	b.n	800112a <__sflush_r+0xda>
 8001156:	bf00      	nop
 8001158:	dfbffffe 	.word	0xdfbffffe

0800115c <_fflush_r>:
 800115c:	b538      	push	{r3, r4, r5, lr}
 800115e:	690b      	ldr	r3, [r1, #16]
 8001160:	4605      	mov	r5, r0
 8001162:	460c      	mov	r4, r1
 8001164:	b913      	cbnz	r3, 800116c <_fflush_r+0x10>
 8001166:	2500      	movs	r5, #0
 8001168:	4628      	mov	r0, r5
 800116a:	bd38      	pop	{r3, r4, r5, pc}
 800116c:	b118      	cbz	r0, 8001176 <_fflush_r+0x1a>
 800116e:	6a03      	ldr	r3, [r0, #32]
 8001170:	b90b      	cbnz	r3, 8001176 <_fflush_r+0x1a>
 8001172:	f7ff fa99 	bl	80006a8 <__sinit>
 8001176:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800117a:	2b00      	cmp	r3, #0
 800117c:	d0f3      	beq.n	8001166 <_fflush_r+0xa>
 800117e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001180:	07d0      	lsls	r0, r2, #31
 8001182:	d404      	bmi.n	800118e <_fflush_r+0x32>
 8001184:	0599      	lsls	r1, r3, #22
 8001186:	d402      	bmi.n	800118e <_fflush_r+0x32>
 8001188:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800118a:	f7ff fb92 	bl	80008b2 <__retarget_lock_acquire_recursive>
 800118e:	4628      	mov	r0, r5
 8001190:	4621      	mov	r1, r4
 8001192:	f7ff ff5d 	bl	8001050 <__sflush_r>
 8001196:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001198:	07da      	lsls	r2, r3, #31
 800119a:	4605      	mov	r5, r0
 800119c:	d4e4      	bmi.n	8001168 <_fflush_r+0xc>
 800119e:	89a3      	ldrh	r3, [r4, #12]
 80011a0:	059b      	lsls	r3, r3, #22
 80011a2:	d4e1      	bmi.n	8001168 <_fflush_r+0xc>
 80011a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80011a6:	f7ff fb85 	bl	80008b4 <__retarget_lock_release_recursive>
 80011aa:	e7dd      	b.n	8001168 <_fflush_r+0xc>

080011ac <__swbuf_r>:
 80011ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ae:	460e      	mov	r6, r1
 80011b0:	4614      	mov	r4, r2
 80011b2:	4605      	mov	r5, r0
 80011b4:	b118      	cbz	r0, 80011be <__swbuf_r+0x12>
 80011b6:	6a03      	ldr	r3, [r0, #32]
 80011b8:	b90b      	cbnz	r3, 80011be <__swbuf_r+0x12>
 80011ba:	f7ff fa75 	bl	80006a8 <__sinit>
 80011be:	69a3      	ldr	r3, [r4, #24]
 80011c0:	60a3      	str	r3, [r4, #8]
 80011c2:	89a3      	ldrh	r3, [r4, #12]
 80011c4:	071a      	lsls	r2, r3, #28
 80011c6:	d525      	bpl.n	8001214 <__swbuf_r+0x68>
 80011c8:	6923      	ldr	r3, [r4, #16]
 80011ca:	b31b      	cbz	r3, 8001214 <__swbuf_r+0x68>
 80011cc:	6823      	ldr	r3, [r4, #0]
 80011ce:	6922      	ldr	r2, [r4, #16]
 80011d0:	1a98      	subs	r0, r3, r2
 80011d2:	6963      	ldr	r3, [r4, #20]
 80011d4:	b2f6      	uxtb	r6, r6
 80011d6:	4283      	cmp	r3, r0
 80011d8:	4637      	mov	r7, r6
 80011da:	dc04      	bgt.n	80011e6 <__swbuf_r+0x3a>
 80011dc:	4621      	mov	r1, r4
 80011de:	4628      	mov	r0, r5
 80011e0:	f7ff ffbc 	bl	800115c <_fflush_r>
 80011e4:	b9e0      	cbnz	r0, 8001220 <__swbuf_r+0x74>
 80011e6:	68a3      	ldr	r3, [r4, #8]
 80011e8:	3b01      	subs	r3, #1
 80011ea:	60a3      	str	r3, [r4, #8]
 80011ec:	6823      	ldr	r3, [r4, #0]
 80011ee:	1c5a      	adds	r2, r3, #1
 80011f0:	6022      	str	r2, [r4, #0]
 80011f2:	701e      	strb	r6, [r3, #0]
 80011f4:	6962      	ldr	r2, [r4, #20]
 80011f6:	1c43      	adds	r3, r0, #1
 80011f8:	429a      	cmp	r2, r3
 80011fa:	d004      	beq.n	8001206 <__swbuf_r+0x5a>
 80011fc:	89a3      	ldrh	r3, [r4, #12]
 80011fe:	07db      	lsls	r3, r3, #31
 8001200:	d506      	bpl.n	8001210 <__swbuf_r+0x64>
 8001202:	2e0a      	cmp	r6, #10
 8001204:	d104      	bne.n	8001210 <__swbuf_r+0x64>
 8001206:	4621      	mov	r1, r4
 8001208:	4628      	mov	r0, r5
 800120a:	f7ff ffa7 	bl	800115c <_fflush_r>
 800120e:	b938      	cbnz	r0, 8001220 <__swbuf_r+0x74>
 8001210:	4638      	mov	r0, r7
 8001212:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001214:	4621      	mov	r1, r4
 8001216:	4628      	mov	r0, r5
 8001218:	f000 f806 	bl	8001228 <__swsetup_r>
 800121c:	2800      	cmp	r0, #0
 800121e:	d0d5      	beq.n	80011cc <__swbuf_r+0x20>
 8001220:	f04f 37ff 	mov.w	r7, #4294967295
 8001224:	e7f4      	b.n	8001210 <__swbuf_r+0x64>
	...

08001228 <__swsetup_r>:
 8001228:	b538      	push	{r3, r4, r5, lr}
 800122a:	4b2a      	ldr	r3, [pc, #168]	; (80012d4 <__swsetup_r+0xac>)
 800122c:	4605      	mov	r5, r0
 800122e:	6818      	ldr	r0, [r3, #0]
 8001230:	460c      	mov	r4, r1
 8001232:	b118      	cbz	r0, 800123c <__swsetup_r+0x14>
 8001234:	6a03      	ldr	r3, [r0, #32]
 8001236:	b90b      	cbnz	r3, 800123c <__swsetup_r+0x14>
 8001238:	f7ff fa36 	bl	80006a8 <__sinit>
 800123c:	89a3      	ldrh	r3, [r4, #12]
 800123e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001242:	0718      	lsls	r0, r3, #28
 8001244:	d422      	bmi.n	800128c <__swsetup_r+0x64>
 8001246:	06d9      	lsls	r1, r3, #27
 8001248:	d407      	bmi.n	800125a <__swsetup_r+0x32>
 800124a:	2309      	movs	r3, #9
 800124c:	602b      	str	r3, [r5, #0]
 800124e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001252:	81a3      	strh	r3, [r4, #12]
 8001254:	f04f 30ff 	mov.w	r0, #4294967295
 8001258:	e034      	b.n	80012c4 <__swsetup_r+0x9c>
 800125a:	0758      	lsls	r0, r3, #29
 800125c:	d512      	bpl.n	8001284 <__swsetup_r+0x5c>
 800125e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001260:	b141      	cbz	r1, 8001274 <__swsetup_r+0x4c>
 8001262:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001266:	4299      	cmp	r1, r3
 8001268:	d002      	beq.n	8001270 <__swsetup_r+0x48>
 800126a:	4628      	mov	r0, r5
 800126c:	f7ff fb24 	bl	80008b8 <_free_r>
 8001270:	2300      	movs	r3, #0
 8001272:	6363      	str	r3, [r4, #52]	; 0x34
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800127a:	81a3      	strh	r3, [r4, #12]
 800127c:	2300      	movs	r3, #0
 800127e:	6063      	str	r3, [r4, #4]
 8001280:	6923      	ldr	r3, [r4, #16]
 8001282:	6023      	str	r3, [r4, #0]
 8001284:	89a3      	ldrh	r3, [r4, #12]
 8001286:	f043 0308 	orr.w	r3, r3, #8
 800128a:	81a3      	strh	r3, [r4, #12]
 800128c:	6923      	ldr	r3, [r4, #16]
 800128e:	b94b      	cbnz	r3, 80012a4 <__swsetup_r+0x7c>
 8001290:	89a3      	ldrh	r3, [r4, #12]
 8001292:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001296:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800129a:	d003      	beq.n	80012a4 <__swsetup_r+0x7c>
 800129c:	4621      	mov	r1, r4
 800129e:	4628      	mov	r0, r5
 80012a0:	f000 f850 	bl	8001344 <__smakebuf_r>
 80012a4:	89a0      	ldrh	r0, [r4, #12]
 80012a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80012aa:	f010 0301 	ands.w	r3, r0, #1
 80012ae:	d00a      	beq.n	80012c6 <__swsetup_r+0x9e>
 80012b0:	2300      	movs	r3, #0
 80012b2:	60a3      	str	r3, [r4, #8]
 80012b4:	6963      	ldr	r3, [r4, #20]
 80012b6:	425b      	negs	r3, r3
 80012b8:	61a3      	str	r3, [r4, #24]
 80012ba:	6923      	ldr	r3, [r4, #16]
 80012bc:	b943      	cbnz	r3, 80012d0 <__swsetup_r+0xa8>
 80012be:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80012c2:	d1c4      	bne.n	800124e <__swsetup_r+0x26>
 80012c4:	bd38      	pop	{r3, r4, r5, pc}
 80012c6:	0781      	lsls	r1, r0, #30
 80012c8:	bf58      	it	pl
 80012ca:	6963      	ldrpl	r3, [r4, #20]
 80012cc:	60a3      	str	r3, [r4, #8]
 80012ce:	e7f4      	b.n	80012ba <__swsetup_r+0x92>
 80012d0:	2000      	movs	r0, #0
 80012d2:	e7f7      	b.n	80012c4 <__swsetup_r+0x9c>
 80012d4:	2000005c 	.word	0x2000005c

080012d8 <_sbrk_r>:
 80012d8:	b538      	push	{r3, r4, r5, lr}
 80012da:	4d06      	ldr	r5, [pc, #24]	; (80012f4 <_sbrk_r+0x1c>)
 80012dc:	2300      	movs	r3, #0
 80012de:	4604      	mov	r4, r0
 80012e0:	4608      	mov	r0, r1
 80012e2:	602b      	str	r3, [r5, #0]
 80012e4:	f7ff f8e2 	bl	80004ac <_sbrk>
 80012e8:	1c43      	adds	r3, r0, #1
 80012ea:	d102      	bne.n	80012f2 <_sbrk_r+0x1a>
 80012ec:	682b      	ldr	r3, [r5, #0]
 80012ee:	b103      	cbz	r3, 80012f2 <_sbrk_r+0x1a>
 80012f0:	6023      	str	r3, [r4, #0]
 80012f2:	bd38      	pop	{r3, r4, r5, pc}
 80012f4:	200001bc 	.word	0x200001bc

080012f8 <__swhatbuf_r>:
 80012f8:	b570      	push	{r4, r5, r6, lr}
 80012fa:	460c      	mov	r4, r1
 80012fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001300:	2900      	cmp	r1, #0
 8001302:	b096      	sub	sp, #88	; 0x58
 8001304:	4615      	mov	r5, r2
 8001306:	461e      	mov	r6, r3
 8001308:	da0d      	bge.n	8001326 <__swhatbuf_r+0x2e>
 800130a:	89a3      	ldrh	r3, [r4, #12]
 800130c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001310:	f04f 0100 	mov.w	r1, #0
 8001314:	bf0c      	ite	eq
 8001316:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800131a:	2340      	movne	r3, #64	; 0x40
 800131c:	2000      	movs	r0, #0
 800131e:	6031      	str	r1, [r6, #0]
 8001320:	602b      	str	r3, [r5, #0]
 8001322:	b016      	add	sp, #88	; 0x58
 8001324:	bd70      	pop	{r4, r5, r6, pc}
 8001326:	466a      	mov	r2, sp
 8001328:	f000 f848 	bl	80013bc <_fstat_r>
 800132c:	2800      	cmp	r0, #0
 800132e:	dbec      	blt.n	800130a <__swhatbuf_r+0x12>
 8001330:	9901      	ldr	r1, [sp, #4]
 8001332:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001336:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800133a:	4259      	negs	r1, r3
 800133c:	4159      	adcs	r1, r3
 800133e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001342:	e7eb      	b.n	800131c <__swhatbuf_r+0x24>

08001344 <__smakebuf_r>:
 8001344:	898b      	ldrh	r3, [r1, #12]
 8001346:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001348:	079d      	lsls	r5, r3, #30
 800134a:	4606      	mov	r6, r0
 800134c:	460c      	mov	r4, r1
 800134e:	d507      	bpl.n	8001360 <__smakebuf_r+0x1c>
 8001350:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001354:	6023      	str	r3, [r4, #0]
 8001356:	6123      	str	r3, [r4, #16]
 8001358:	2301      	movs	r3, #1
 800135a:	6163      	str	r3, [r4, #20]
 800135c:	b002      	add	sp, #8
 800135e:	bd70      	pop	{r4, r5, r6, pc}
 8001360:	ab01      	add	r3, sp, #4
 8001362:	466a      	mov	r2, sp
 8001364:	f7ff ffc8 	bl	80012f8 <__swhatbuf_r>
 8001368:	9900      	ldr	r1, [sp, #0]
 800136a:	4605      	mov	r5, r0
 800136c:	4630      	mov	r0, r6
 800136e:	f7ff fb0f 	bl	8000990 <_malloc_r>
 8001372:	b948      	cbnz	r0, 8001388 <__smakebuf_r+0x44>
 8001374:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001378:	059a      	lsls	r2, r3, #22
 800137a:	d4ef      	bmi.n	800135c <__smakebuf_r+0x18>
 800137c:	f023 0303 	bic.w	r3, r3, #3
 8001380:	f043 0302 	orr.w	r3, r3, #2
 8001384:	81a3      	strh	r3, [r4, #12]
 8001386:	e7e3      	b.n	8001350 <__smakebuf_r+0xc>
 8001388:	89a3      	ldrh	r3, [r4, #12]
 800138a:	6020      	str	r0, [r4, #0]
 800138c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001390:	81a3      	strh	r3, [r4, #12]
 8001392:	9b00      	ldr	r3, [sp, #0]
 8001394:	6163      	str	r3, [r4, #20]
 8001396:	9b01      	ldr	r3, [sp, #4]
 8001398:	6120      	str	r0, [r4, #16]
 800139a:	b15b      	cbz	r3, 80013b4 <__smakebuf_r+0x70>
 800139c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013a0:	4630      	mov	r0, r6
 80013a2:	f000 f81d 	bl	80013e0 <_isatty_r>
 80013a6:	b128      	cbz	r0, 80013b4 <__smakebuf_r+0x70>
 80013a8:	89a3      	ldrh	r3, [r4, #12]
 80013aa:	f023 0303 	bic.w	r3, r3, #3
 80013ae:	f043 0301 	orr.w	r3, r3, #1
 80013b2:	81a3      	strh	r3, [r4, #12]
 80013b4:	89a3      	ldrh	r3, [r4, #12]
 80013b6:	431d      	orrs	r5, r3
 80013b8:	81a5      	strh	r5, [r4, #12]
 80013ba:	e7cf      	b.n	800135c <__smakebuf_r+0x18>

080013bc <_fstat_r>:
 80013bc:	b538      	push	{r3, r4, r5, lr}
 80013be:	4d07      	ldr	r5, [pc, #28]	; (80013dc <_fstat_r+0x20>)
 80013c0:	2300      	movs	r3, #0
 80013c2:	4604      	mov	r4, r0
 80013c4:	4608      	mov	r0, r1
 80013c6:	4611      	mov	r1, r2
 80013c8:	602b      	str	r3, [r5, #0]
 80013ca:	f7ff f846 	bl	800045a <_fstat>
 80013ce:	1c43      	adds	r3, r0, #1
 80013d0:	d102      	bne.n	80013d8 <_fstat_r+0x1c>
 80013d2:	682b      	ldr	r3, [r5, #0]
 80013d4:	b103      	cbz	r3, 80013d8 <_fstat_r+0x1c>
 80013d6:	6023      	str	r3, [r4, #0]
 80013d8:	bd38      	pop	{r3, r4, r5, pc}
 80013da:	bf00      	nop
 80013dc:	200001bc 	.word	0x200001bc

080013e0 <_isatty_r>:
 80013e0:	b538      	push	{r3, r4, r5, lr}
 80013e2:	4d06      	ldr	r5, [pc, #24]	; (80013fc <_isatty_r+0x1c>)
 80013e4:	2300      	movs	r3, #0
 80013e6:	4604      	mov	r4, r0
 80013e8:	4608      	mov	r0, r1
 80013ea:	602b      	str	r3, [r5, #0]
 80013ec:	f7ff f845 	bl	800047a <_isatty>
 80013f0:	1c43      	adds	r3, r0, #1
 80013f2:	d102      	bne.n	80013fa <_isatty_r+0x1a>
 80013f4:	682b      	ldr	r3, [r5, #0]
 80013f6:	b103      	cbz	r3, 80013fa <_isatty_r+0x1a>
 80013f8:	6023      	str	r3, [r4, #0]
 80013fa:	bd38      	pop	{r3, r4, r5, pc}
 80013fc:	200001bc 	.word	0x200001bc

08001400 <_init>:
 8001400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001402:	bf00      	nop
 8001404:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001406:	bc08      	pop	{r3}
 8001408:	469e      	mov	lr, r3
 800140a:	4770      	bx	lr

0800140c <_fini>:
 800140c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800140e:	bf00      	nop
 8001410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001412:	bc08      	pop	{r3}
 8001414:	469e      	mov	lr, r3
 8001416:	4770      	bx	lr
